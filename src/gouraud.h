#pragma once
/*
    #version:1# (machine generated, don't edit!)

    Generated by sokol-shdc (https://github.com/floooh/sokol-tools)

    Cmdline:
        sokol-shdc --input /Users/adam/src/sokexp/src/gouraud.glsl --output /Users/adam/src/sokexp/src/gouraud.h --slang glsl410:glsl300es:hlsl5:metal_macos:metal_ios:metal_sim:wgsl

    Overview:
    =========
    Shader program: 'gouraud':
        Get shader desc: gouraud_shader_desc(sg_query_backend());
        Vertex shader: vs
            Attributes:
                ATTR_vs_a_Position => 0
                ATTR_vs_a_Normal => 1
                ATTR_vs_a_Texcoord0 => 2
            Uniform block 'vs_params':
                C struct: vs_params_t
                Bind slot: SLOT_vs_params => 0
        Fragment shader: fs
            Uniform block 'fs_params':
                C struct: fs_params_t
                Bind slot: SLOT_fs_params => 0
            Image 'tex':
                Image type: SG_IMAGETYPE_2D
                Sample type: SG_IMAGESAMPLETYPE_FLOAT
                Multisampled: false
                Bind slot: SLOT_tex => 0
            Sampler 'smp':
                Type: SG_SAMPLERTYPE_FILTERING
                Bind slot: SLOT_smp => 0
            Image Sampler Pair 'tex_smp':
                Image: tex
                Sampler: smp
*/
#if !defined(SOKOL_GFX_INCLUDED)
#error "Please include sokol_gfx.h before gouraud.h"
#endif
#if !defined(SOKOL_SHDC_ALIGN)
#if defined(_MSC_VER)
#define SOKOL_SHDC_ALIGN(a) __declspec(align(a))
#else
#define SOKOL_SHDC_ALIGN(a) __attribute__((aligned(a)))
#endif
#endif
#define ATTR_vs_a_Position (0)
#define ATTR_vs_a_Normal (1)
#define ATTR_vs_a_Texcoord0 (2)
#define SLOT_vs_params (0)
#define SLOT_fs_params (0)
#define SLOT_tex (0)
#define SLOT_smp (0)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct vs_params_t {
    float u_MVMatrix[16];
    float u_MVPMatrix[16];
    float u_NMatrix[16];
} vs_params_t;
#pragma pack(pop)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct fs_params_t {
    float u_LightPos[4];
    float ambientColor[4];
    float diffuseColor[4];
    float specularColor[4];
} fs_params_t;
#pragma pack(pop)
/*
    #version 410

    uniform vec4 vs_params[12];
    layout(location = 0) out vec3 v_Position;
    layout(location = 0) in vec4 a_Position;
    layout(location = 1) out vec3 v_Normal;
    layout(location = 1) in vec3 a_Normal;
    layout(location = 3) out vec2 uv;
    layout(location = 2) in vec2 a_Texcoord0;
    layout(location = 2) out vec3 v_Normal1;

    void main()
    {
        mat4 _19 = mat4(vs_params[0], vs_params[1], vs_params[2], vs_params[3]);
        v_Position = vec3((_19 * a_Position).xyz);
        vec4 _39 = vec4(a_Normal, 1.0);
        v_Normal = vec3((mat4(vs_params[8], vs_params[9], vs_params[10], vs_params[11]) * _39).xyz);
        uv = a_Texcoord0;
        v_Normal1 = normalize(vec3((_19 * _39).xyz));
        gl_Position = mat4(vs_params[4], vs_params[5], vs_params[6], vs_params[7]) * a_Position;
    }

*/
static const uint8_t vs_source_glsl410[762] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x31,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x31,0x32,0x5d,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,
    0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x6f,
    0x75,0x74,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,
    0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x34,
    0x20,0x61,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x6c,0x61,0x79,
    0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,
    0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x5f,0x4e,0x6f,0x72,
    0x6d,0x61,0x6c,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,
    0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,
    0x33,0x20,0x61,0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x6c,0x61,0x79,0x6f,
    0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x33,0x29,
    0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x32,0x20,0x75,0x76,0x3b,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x32,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x61,0x5f,0x54,0x65,0x78,
    0x63,0x6f,0x6f,0x72,0x64,0x30,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,
    0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x32,0x29,0x20,0x6f,0x75,0x74,
    0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x31,0x3b,
    0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x6d,0x61,0x74,0x34,0x20,0x5f,0x31,0x39,0x20,0x3d,0x20,0x6d,
    0x61,0x74,0x34,0x28,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,
    0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,0x2c,0x20,
    0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,0x2c,0x20,0x76,0x73,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x33,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x76,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x76,0x65,
    0x63,0x33,0x28,0x28,0x5f,0x31,0x39,0x20,0x2a,0x20,0x61,0x5f,0x50,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x29,0x2e,0x78,0x79,0x7a,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x76,0x65,0x63,0x34,0x20,0x5f,0x33,0x39,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,
    0x61,0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x76,0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x76,
    0x65,0x63,0x33,0x28,0x28,0x6d,0x61,0x74,0x34,0x28,0x76,0x73,0x5f,0x70,0x61,0x72,
    0x61,0x6d,0x73,0x5b,0x38,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x39,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,
    0x31,0x30,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,
    0x31,0x5d,0x29,0x20,0x2a,0x20,0x5f,0x33,0x39,0x29,0x2e,0x78,0x79,0x7a,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x75,0x76,0x20,0x3d,0x20,0x61,0x5f,0x54,0x65,0x78,0x63,
    0x6f,0x6f,0x72,0x64,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x5f,0x4e,0x6f,0x72,
    0x6d,0x61,0x6c,0x31,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,
    0x28,0x76,0x65,0x63,0x33,0x28,0x28,0x5f,0x31,0x39,0x20,0x2a,0x20,0x5f,0x33,0x39,
    0x29,0x2e,0x78,0x79,0x7a,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,
    0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,
    0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x34,0x5d,0x2c,0x20,0x76,0x73,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x35,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x5b,0x36,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,
    0x61,0x6d,0x73,0x5b,0x37,0x5d,0x29,0x20,0x2a,0x20,0x61,0x5f,0x50,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 410

    uniform vec4 fs_params[4];
    uniform sampler2D tex_smp;

    layout(location = 0) in vec3 v_Position;
    layout(location = 1) in vec3 v_Normal;
    layout(location = 3) in vec2 uv;
    layout(location = 2) in vec3 v_Normal1;
    layout(location = 0) out vec4 frag_color;
    vec3 lightDirection;

    vec3 phongBRDF(vec3 lightDir, vec3 viewDir, vec3 normal, vec3 phongDiffuseCol, vec3 phongSpecularCol, float phongShininess)
    {
        return phongDiffuseCol + (phongSpecularCol * pow(max(dot(reflect(-lightDir, normal), viewDir), 0.0), phongShininess));
    }

    vec4 getPhong(vec4 diffuseColor)
    {
        vec3 _63 = normalize(-lightDirection);
        vec3 _73 = normalize(v_Normal);
        vec3 luminance = fs_params[1].xyz * 0.5;
        float _84 = dot(_63, _73);
        if (_84 > 0.0)
        {
            vec3 param = _63;
            vec3 param_1 = normalize(-v_Position);
            vec3 param_2 = _73;
            vec3 param_3 = diffuseColor.xyz;
            vec3 param_4 = fs_params[3].xyz;
            float param_5 = fs_params[3].w * 1000.0;
            luminance += (phongBRDF(param, param_1, param_2, param_3, param_4, param_5) * _84);
        }
        return vec4(luminance, 1.0);
    }

    void main()
    {
        lightDirection = -fs_params[0].xyz;
        vec4 _146 = texture(tex_smp, uv);
        vec4 param = fs_params[2];
        frag_color = vec4(clamp(fma(_146.xyz, getPhong(param).xyz, vec3(dot(normalize(v_Normal1), vec3(0.0, 0.447213590145111083984375, 0.89442718029022216796875)) * 0.1500000059604644775390625)), vec3(0.0), vec3(1.0)), _146.w * fs_params[2].w);
    }

*/
static const uint8_t fs_source_glsl410[1488] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x31,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x66,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x34,0x5d,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,
    0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x74,0x65,0x78,0x5f,0x73,
    0x6d,0x70,0x3b,0x0a,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,
    0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,
    0x33,0x20,0x76,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x31,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x5f,0x4e,0x6f,0x72,
    0x6d,0x61,0x6c,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,
    0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x33,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,
    0x32,0x20,0x75,0x76,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,
    0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x32,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,
    0x63,0x33,0x20,0x76,0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x31,0x3b,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x66,0x72,0x61,0x67,
    0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x76,0x65,0x63,0x33,0x20,0x6c,0x69,0x67,
    0x68,0x74,0x44,0x69,0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x0a,0x76,0x65,
    0x63,0x33,0x20,0x70,0x68,0x6f,0x6e,0x67,0x42,0x52,0x44,0x46,0x28,0x76,0x65,0x63,
    0x33,0x20,0x6c,0x69,0x67,0x68,0x74,0x44,0x69,0x72,0x2c,0x20,0x76,0x65,0x63,0x33,
    0x20,0x76,0x69,0x65,0x77,0x44,0x69,0x72,0x2c,0x20,0x76,0x65,0x63,0x33,0x20,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x68,0x6f,0x6e,
    0x67,0x44,0x69,0x66,0x66,0x75,0x73,0x65,0x43,0x6f,0x6c,0x2c,0x20,0x76,0x65,0x63,
    0x33,0x20,0x70,0x68,0x6f,0x6e,0x67,0x53,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x43,
    0x6f,0x6c,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x68,0x6f,0x6e,0x67,0x53,
    0x68,0x69,0x6e,0x69,0x6e,0x65,0x73,0x73,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x70,0x68,0x6f,0x6e,0x67,0x44,0x69,0x66,0x66,
    0x75,0x73,0x65,0x43,0x6f,0x6c,0x20,0x2b,0x20,0x28,0x70,0x68,0x6f,0x6e,0x67,0x53,
    0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x43,0x6f,0x6c,0x20,0x2a,0x20,0x70,0x6f,0x77,
    0x28,0x6d,0x61,0x78,0x28,0x64,0x6f,0x74,0x28,0x72,0x65,0x66,0x6c,0x65,0x63,0x74,
    0x28,0x2d,0x6c,0x69,0x67,0x68,0x74,0x44,0x69,0x72,0x2c,0x20,0x6e,0x6f,0x72,0x6d,
    0x61,0x6c,0x29,0x2c,0x20,0x76,0x69,0x65,0x77,0x44,0x69,0x72,0x29,0x2c,0x20,0x30,
    0x2e,0x30,0x29,0x2c,0x20,0x70,0x68,0x6f,0x6e,0x67,0x53,0x68,0x69,0x6e,0x69,0x6e,
    0x65,0x73,0x73,0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x65,0x63,0x34,0x20,0x67,
    0x65,0x74,0x50,0x68,0x6f,0x6e,0x67,0x28,0x76,0x65,0x63,0x34,0x20,0x64,0x69,0x66,
    0x66,0x75,0x73,0x65,0x43,0x6f,0x6c,0x6f,0x72,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x36,0x33,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,
    0x61,0x6c,0x69,0x7a,0x65,0x28,0x2d,0x6c,0x69,0x67,0x68,0x74,0x44,0x69,0x72,0x65,
    0x63,0x74,0x69,0x6f,0x6e,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,
    0x20,0x5f,0x37,0x33,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,
    0x28,0x76,0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x76,0x65,0x63,0x33,0x20,0x6c,0x75,0x6d,0x69,0x6e,0x61,0x6e,0x63,0x65,0x20,0x3d,
    0x20,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,0x2e,0x78,0x79,
    0x7a,0x20,0x2a,0x20,0x30,0x2e,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x5f,0x38,0x34,0x20,0x3d,0x20,0x64,0x6f,0x74,0x28,0x5f,0x36,0x33,
    0x2c,0x20,0x5f,0x37,0x33,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,
    0x5f,0x38,0x34,0x20,0x3e,0x20,0x30,0x2e,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x20,0x3d,0x20,0x5f,0x36,0x33,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,
    0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x2d,0x76,0x5f,0x50,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,
    0x20,0x5f,0x37,0x33,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,
    0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,0x64,0x69,0x66,
    0x66,0x75,0x73,0x65,0x43,0x6f,0x6c,0x6f,0x72,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x34,0x20,0x3d,0x20,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,
    0x33,0x5d,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,0x20,0x3d,0x20,
    0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x33,0x5d,0x2e,0x77,0x20,0x2a,
    0x20,0x31,0x30,0x30,0x30,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x6c,0x75,0x6d,0x69,0x6e,0x61,0x6e,0x63,0x65,0x20,0x2b,0x3d,0x20,0x28,0x70,
    0x68,0x6f,0x6e,0x67,0x42,0x52,0x44,0x46,0x28,0x70,0x61,0x72,0x61,0x6d,0x2c,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,
    0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x34,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,0x29,0x20,0x2a,0x20,0x5f,
    0x38,0x34,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x72,
    0x65,0x74,0x75,0x72,0x6e,0x20,0x76,0x65,0x63,0x34,0x28,0x6c,0x75,0x6d,0x69,0x6e,
    0x61,0x6e,0x63,0x65,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,
    0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x6c,0x69,0x67,0x68,0x74,0x44,0x69,0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x2d,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,
    0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x31,
    0x34,0x36,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x74,0x65,0x78,
    0x5f,0x73,0x6d,0x70,0x2c,0x20,0x75,0x76,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,
    0x65,0x63,0x34,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x66,0x73,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,
    0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,
    0x63,0x6c,0x61,0x6d,0x70,0x28,0x66,0x6d,0x61,0x28,0x5f,0x31,0x34,0x36,0x2e,0x78,
    0x79,0x7a,0x2c,0x20,0x67,0x65,0x74,0x50,0x68,0x6f,0x6e,0x67,0x28,0x70,0x61,0x72,
    0x61,0x6d,0x29,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x76,0x65,0x63,0x33,0x28,0x64,0x6f,
    0x74,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x76,0x5f,0x4e,0x6f,
    0x72,0x6d,0x61,0x6c,0x31,0x29,0x2c,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x30,
    0x2c,0x20,0x30,0x2e,0x34,0x34,0x37,0x32,0x31,0x33,0x35,0x39,0x30,0x31,0x34,0x35,
    0x31,0x31,0x31,0x30,0x38,0x33,0x39,0x38,0x34,0x33,0x37,0x35,0x2c,0x20,0x30,0x2e,
    0x38,0x39,0x34,0x34,0x32,0x37,0x31,0x38,0x30,0x32,0x39,0x30,0x32,0x32,0x32,0x31,
    0x36,0x37,0x39,0x36,0x38,0x37,0x35,0x29,0x29,0x20,0x2a,0x20,0x30,0x2e,0x31,0x35,
    0x30,0x30,0x30,0x30,0x30,0x30,0x35,0x39,0x36,0x30,0x34,0x36,0x34,0x34,0x37,0x37,
    0x35,0x33,0x39,0x30,0x36,0x32,0x35,0x29,0x29,0x2c,0x20,0x76,0x65,0x63,0x33,0x28,
    0x30,0x2e,0x30,0x29,0x2c,0x20,0x76,0x65,0x63,0x33,0x28,0x31,0x2e,0x30,0x29,0x29,
    0x2c,0x20,0x5f,0x31,0x34,0x36,0x2e,0x77,0x20,0x2a,0x20,0x66,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,0x2e,0x77,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,

};
/*
    #version 300 es

    uniform vec4 vs_params[12];
    out vec3 v_Position;
    layout(location = 0) in vec4 a_Position;
    out vec3 v_Normal;
    layout(location = 1) in vec3 a_Normal;
    out vec2 uv;
    layout(location = 2) in vec2 a_Texcoord0;
    out vec3 v_Normal1;

    void main()
    {
        mat4 _19 = mat4(vs_params[0], vs_params[1], vs_params[2], vs_params[3]);
        v_Position = vec3((_19 * a_Position).xyz);
        vec4 _39 = vec4(a_Normal, 1.0);
        v_Normal = vec3((mat4(vs_params[8], vs_params[9], vs_params[10], vs_params[11]) * _39).xyz);
        uv = a_Texcoord0;
        v_Normal1 = normalize(vec3((_19 * _39).xyz));
        gl_Position = mat4(vs_params[4], vs_params[5], vs_params[6], vs_params[7]) * a_Position;
    }

*/
static const uint8_t vs_source_glsl300es[681] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x73,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x32,0x5d,0x3b,0x0a,0x6f,0x75,0x74,
    0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,
    0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x34,0x20,0x61,
    0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,
    0x65,0x63,0x33,0x20,0x76,0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x31,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x61,0x5f,0x4e,0x6f,0x72,
    0x6d,0x61,0x6c,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x32,0x20,0x75,0x76,
    0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,
    0x6e,0x20,0x3d,0x20,0x32,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x61,
    0x5f,0x54,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x30,0x3b,0x0a,0x6f,0x75,0x74,0x20,
    0x76,0x65,0x63,0x33,0x20,0x76,0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x31,0x3b,0x0a,
    0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x6d,0x61,0x74,0x34,0x20,0x5f,0x31,0x39,0x20,0x3d,0x20,0x6d,0x61,
    0x74,0x34,0x28,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2c,
    0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,0x2c,0x20,0x76,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,0x2c,0x20,0x76,0x73,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x33,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x76,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x76,0x65,0x63,
    0x33,0x28,0x28,0x5f,0x31,0x39,0x20,0x2a,0x20,0x61,0x5f,0x50,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x29,0x2e,0x78,0x79,0x7a,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,
    0x65,0x63,0x34,0x20,0x5f,0x33,0x39,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x61,
    0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x76,0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x76,0x65,
    0x63,0x33,0x28,0x28,0x6d,0x61,0x74,0x34,0x28,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x38,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x5b,0x39,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,
    0x30,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x31,
    0x5d,0x29,0x20,0x2a,0x20,0x5f,0x33,0x39,0x29,0x2e,0x78,0x79,0x7a,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x75,0x76,0x20,0x3d,0x20,0x61,0x5f,0x54,0x65,0x78,0x63,0x6f,
    0x6f,0x72,0x64,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x5f,0x4e,0x6f,0x72,0x6d,
    0x61,0x6c,0x31,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,
    0x76,0x65,0x63,0x33,0x28,0x28,0x5f,0x31,0x39,0x20,0x2a,0x20,0x5f,0x33,0x39,0x29,
    0x2e,0x78,0x79,0x7a,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,0x76,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x34,0x5d,0x2c,0x20,0x76,0x73,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x35,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x36,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x37,0x5d,0x29,0x20,0x2a,0x20,0x61,0x5f,0x50,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 300 es
    precision mediump float;
    precision highp int;

    uniform highp vec4 fs_params[4];
    uniform highp sampler2D tex_smp;

    in highp vec3 v_Position;
    in highp vec3 v_Normal;
    in highp vec2 uv;
    in highp vec3 v_Normal1;
    layout(location = 0) out highp vec4 frag_color;
    highp vec3 lightDirection;

    highp vec3 phongBRDF(highp vec3 lightDir, highp vec3 viewDir, highp vec3 normal, highp vec3 phongDiffuseCol, highp vec3 phongSpecularCol, highp float phongShininess)
    {
        return phongDiffuseCol + (phongSpecularCol * pow(max(dot(reflect(-lightDir, normal), viewDir), 0.0), phongShininess));
    }

    highp vec4 getPhong(highp vec4 diffuseColor)
    {
        highp vec3 _63 = normalize(-lightDirection);
        highp vec3 _73 = normalize(v_Normal);
        highp vec3 luminance = fs_params[1].xyz * 0.5;
        highp float _84 = dot(_63, _73);
        if (_84 > 0.0)
        {
            highp vec3 param = _63;
            highp vec3 param_1 = normalize(-v_Position);
            highp vec3 param_2 = _73;
            highp vec3 param_3 = diffuseColor.xyz;
            highp vec3 param_4 = fs_params[3].xyz;
            highp float param_5 = fs_params[3].w * 1000.0;
            luminance += (phongBRDF(param, param_1, param_2, param_3, param_4, param_5) * _84);
        }
        return vec4(luminance, 1.0);
    }

    void main()
    {
        lightDirection = -fs_params[0].xyz;
        highp vec4 _146 = texture(tex_smp, uv);
        highp vec4 param = fs_params[2];
        frag_color = vec4(clamp(_146.xyz * getPhong(param).xyz + vec3(dot(normalize(v_Normal1), vec3(0.0, 0.447213590145111083984375, 0.89442718029022216796875)) * 0.1500000059604644775390625), vec3(0.0), vec3(1.0)), _146.w * fs_params[2].w);
    }

*/
static const uint8_t fs_source_glsl300es[1624] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x70,0x72,0x65,0x63,0x69,0x73,0x69,0x6f,0x6e,0x20,0x6d,0x65,0x64,0x69,0x75,0x6d,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x3b,0x0a,0x70,0x72,0x65,0x63,0x69,0x73,0x69,
    0x6f,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x69,0x6e,0x74,0x3b,0x0a,0x0a,0x75,
    0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x34,0x20,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x34,0x5d,0x3b,0x0a,
    0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x73,0x61,
    0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x74,0x65,0x78,0x5f,0x73,0x6d,0x70,0x3b,
    0x0a,0x0a,0x69,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,
    0x76,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x69,0x6e,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x5f,0x4e,0x6f,0x72,0x6d,
    0x61,0x6c,0x3b,0x0a,0x69,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x32,0x20,0x75,0x76,0x3b,0x0a,0x69,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,
    0x65,0x63,0x33,0x20,0x76,0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x31,0x3b,0x0a,0x6c,
    0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,
    0x63,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x68,
    0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x6c,0x69,0x67,0x68,0x74,0x44,
    0x69,0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x0a,0x68,0x69,0x67,0x68,0x70,
    0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x68,0x6f,0x6e,0x67,0x42,0x52,0x44,0x46,0x28,
    0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x6c,0x69,0x67,0x68,0x74,
    0x44,0x69,0x72,0x2c,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,
    0x76,0x69,0x65,0x77,0x44,0x69,0x72,0x2c,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,
    0x65,0x63,0x33,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x68,0x6f,0x6e,0x67,0x44,0x69,0x66,0x66,
    0x75,0x73,0x65,0x43,0x6f,0x6c,0x2c,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,
    0x63,0x33,0x20,0x70,0x68,0x6f,0x6e,0x67,0x53,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,
    0x43,0x6f,0x6c,0x2c,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x70,0x68,0x6f,0x6e,0x67,0x53,0x68,0x69,0x6e,0x69,0x6e,0x65,0x73,0x73,0x29,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x70,0x68,
    0x6f,0x6e,0x67,0x44,0x69,0x66,0x66,0x75,0x73,0x65,0x43,0x6f,0x6c,0x20,0x2b,0x20,
    0x28,0x70,0x68,0x6f,0x6e,0x67,0x53,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x43,0x6f,
    0x6c,0x20,0x2a,0x20,0x70,0x6f,0x77,0x28,0x6d,0x61,0x78,0x28,0x64,0x6f,0x74,0x28,
    0x72,0x65,0x66,0x6c,0x65,0x63,0x74,0x28,0x2d,0x6c,0x69,0x67,0x68,0x74,0x44,0x69,
    0x72,0x2c,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x29,0x2c,0x20,0x76,0x69,0x65,0x77,
    0x44,0x69,0x72,0x29,0x2c,0x20,0x30,0x2e,0x30,0x29,0x2c,0x20,0x70,0x68,0x6f,0x6e,
    0x67,0x53,0x68,0x69,0x6e,0x69,0x6e,0x65,0x73,0x73,0x29,0x29,0x3b,0x0a,0x7d,0x0a,
    0x0a,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x67,0x65,0x74,0x50,
    0x68,0x6f,0x6e,0x67,0x28,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,
    0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x43,0x6f,0x6c,0x6f,0x72,0x29,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,
    0x36,0x33,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x2d,
    0x6c,0x69,0x67,0x68,0x74,0x44,0x69,0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,
    0x5f,0x37,0x33,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,
    0x76,0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x6c,0x75,0x6d,0x69,0x6e,0x61,
    0x6e,0x63,0x65,0x20,0x3d,0x20,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,
    0x31,0x5d,0x2e,0x78,0x79,0x7a,0x20,0x2a,0x20,0x30,0x2e,0x35,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x38,
    0x34,0x20,0x3d,0x20,0x64,0x6f,0x74,0x28,0x5f,0x36,0x33,0x2c,0x20,0x5f,0x37,0x33,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x38,0x34,0x20,0x3e,
    0x20,0x30,0x2e,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x5f,0x36,0x33,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,
    0x7a,0x65,0x28,0x2d,0x76,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,
    0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x5f,0x37,
    0x33,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,
    0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x43,0x6f,0x6c,0x6f,0x72,0x2e,0x78,0x79,0x7a,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x20,0x3d,0x20,0x66,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x33,0x5d,0x2e,0x78,0x79,0x7a,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,0x20,0x3d,0x20,0x66,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x33,0x5d,0x2e,0x77,0x20,0x2a,0x20,
    0x31,0x30,0x30,0x30,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x6c,0x75,0x6d,0x69,0x6e,0x61,0x6e,0x63,0x65,0x20,0x2b,0x3d,0x20,0x28,0x70,0x68,
    0x6f,0x6e,0x67,0x42,0x52,0x44,0x46,0x28,0x70,0x61,0x72,0x61,0x6d,0x2c,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x31,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x2c,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x34,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,0x29,0x20,0x2a,0x20,0x5f,0x38,
    0x34,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,
    0x74,0x75,0x72,0x6e,0x20,0x76,0x65,0x63,0x34,0x28,0x6c,0x75,0x6d,0x69,0x6e,0x61,
    0x6e,0x63,0x65,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x6f,
    0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x6c,0x69,0x67,0x68,0x74,0x44,0x69,0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x2d,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x78,
    0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,
    0x63,0x34,0x20,0x5f,0x31,0x34,0x36,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,
    0x65,0x28,0x74,0x65,0x78,0x5f,0x73,0x6d,0x70,0x2c,0x20,0x75,0x76,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x5b,0x32,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,
    0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x63,0x6c,0x61,0x6d,0x70,
    0x28,0x5f,0x31,0x34,0x36,0x2e,0x78,0x79,0x7a,0x20,0x2a,0x20,0x67,0x65,0x74,0x50,
    0x68,0x6f,0x6e,0x67,0x28,0x70,0x61,0x72,0x61,0x6d,0x29,0x2e,0x78,0x79,0x7a,0x20,
    0x2b,0x20,0x76,0x65,0x63,0x33,0x28,0x64,0x6f,0x74,0x28,0x6e,0x6f,0x72,0x6d,0x61,
    0x6c,0x69,0x7a,0x65,0x28,0x76,0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x31,0x29,0x2c,
    0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x34,0x34,0x37,
    0x32,0x31,0x33,0x35,0x39,0x30,0x31,0x34,0x35,0x31,0x31,0x31,0x30,0x38,0x33,0x39,
    0x38,0x34,0x33,0x37,0x35,0x2c,0x20,0x30,0x2e,0x38,0x39,0x34,0x34,0x32,0x37,0x31,
    0x38,0x30,0x32,0x39,0x30,0x32,0x32,0x32,0x31,0x36,0x37,0x39,0x36,0x38,0x37,0x35,
    0x29,0x29,0x20,0x2a,0x20,0x30,0x2e,0x31,0x35,0x30,0x30,0x30,0x30,0x30,0x30,0x35,
    0x39,0x36,0x30,0x34,0x36,0x34,0x34,0x37,0x37,0x35,0x33,0x39,0x30,0x36,0x32,0x35,
    0x29,0x2c,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x30,0x29,0x2c,0x20,0x76,0x65,
    0x63,0x33,0x28,0x31,0x2e,0x30,0x29,0x29,0x2c,0x20,0x5f,0x31,0x34,0x36,0x2e,0x77,
    0x20,0x2a,0x20,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,0x2e,
    0x77,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    cbuffer vs_params : register(b0)
    {
        row_major float4x4 _14_u_MVMatrix : packoffset(c0);
        row_major float4x4 _14_u_MVPMatrix : packoffset(c4);
        row_major float4x4 _14_u_NMatrix : packoffset(c8);
    };


    static float4 gl_Position;
    static float3 v_Position;
    static float4 a_Position;
    static float3 v_Normal;
    static float3 a_Normal;
    static float2 uv;
    static float2 a_Texcoord0;
    static float3 v_Normal1;

    struct SPIRV_Cross_Input
    {
        float4 a_Position : TEXCOORD0;
        float3 a_Normal : TEXCOORD1;
        float2 a_Texcoord0 : TEXCOORD2;
    };

    struct SPIRV_Cross_Output
    {
        float3 v_Position : TEXCOORD0;
        float3 v_Normal : TEXCOORD1;
        float3 v_Normal1 : TEXCOORD2;
        float2 uv : TEXCOORD3;
        float4 gl_Position : SV_Position;
    };

    void vert_main()
    {
        v_Position = float3(mul(a_Position, _14_u_MVMatrix).xyz);
        float4 _39 = float4(a_Normal, 1.0f);
        v_Normal = float3(mul(_39, _14_u_NMatrix).xyz);
        uv = a_Texcoord0;
        v_Normal1 = normalize(float3(mul(_39, _14_u_MVMatrix).xyz));
        gl_Position = mul(a_Position, _14_u_MVPMatrix);
    }

    SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
    {
        a_Position = stage_input.a_Position;
        a_Normal = stage_input.a_Normal;
        a_Texcoord0 = stage_input.a_Texcoord0;
        vert_main();
        SPIRV_Cross_Output stage_output;
        stage_output.gl_Position = gl_Position;
        stage_output.v_Position = v_Position;
        stage_output.v_Normal = v_Normal;
        stage_output.uv = uv;
        stage_output.v_Normal1 = v_Normal1;
        return stage_output;
    }
*/
static const uint8_t vs_source_hlsl5[1506] = {
    0x63,0x62,0x75,0x66,0x66,0x65,0x72,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x62,0x30,0x29,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x6f,0x77,0x5f,0x6d,0x61,0x6a,0x6f,0x72,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x5f,0x31,0x34,0x5f,0x75,0x5f,
    0x4d,0x56,0x4d,0x61,0x74,0x72,0x69,0x78,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,
    0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,
    0x6f,0x77,0x5f,0x6d,0x61,0x6a,0x6f,0x72,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,
    0x34,0x20,0x5f,0x31,0x34,0x5f,0x75,0x5f,0x4d,0x56,0x50,0x4d,0x61,0x74,0x72,0x69,
    0x78,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,
    0x34,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x6f,0x77,0x5f,0x6d,0x61,0x6a,0x6f,
    0x72,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x5f,0x31,0x34,0x5f,0x75,
    0x5f,0x4e,0x4d,0x61,0x74,0x72,0x69,0x78,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,
    0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x38,0x29,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x0a,
    0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x67,0x6c,
    0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,
    0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x5f,0x50,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x34,0x20,0x61,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x73,
    0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x5f,0x4e,
    0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x33,0x20,0x61,0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x73,
    0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x75,0x76,0x3b,
    0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x61,
    0x5f,0x54,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x30,0x3b,0x0a,0x73,0x74,0x61,0x74,
    0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x5f,0x4e,0x6f,0x72,0x6d,
    0x61,0x6c,0x31,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x53,0x50,0x49,
    0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x61,0x5f,0x50,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,
    0x44,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x61,
    0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,
    0x52,0x44,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,
    0x61,0x5f,0x54,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x30,0x20,0x3a,0x20,0x54,0x45,
    0x58,0x43,0x4f,0x4f,0x52,0x44,0x32,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,
    0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,
    0x4f,0x75,0x74,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x33,0x20,0x76,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3a,
    0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x20,
    0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x31,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,
    0x31,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x32,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x75,0x76,0x20,0x3a,0x20,0x54,
    0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x33,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x34,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x20,0x3a,0x20,0x53,0x56,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,
    0x7d,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x76,0x65,0x72,0x74,0x5f,0x6d,0x61,
    0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x5f,0x50,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x6d,
    0x75,0x6c,0x28,0x61,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x5f,
    0x31,0x34,0x5f,0x75,0x5f,0x4d,0x56,0x4d,0x61,0x74,0x72,0x69,0x78,0x29,0x2e,0x78,
    0x79,0x7a,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,
    0x5f,0x33,0x39,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x61,0x5f,0x4e,
    0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x31,0x2e,0x30,0x66,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x76,0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x33,0x28,0x6d,0x75,0x6c,0x28,0x5f,0x33,0x39,0x2c,0x20,0x5f,0x31,0x34,
    0x5f,0x75,0x5f,0x4e,0x4d,0x61,0x74,0x72,0x69,0x78,0x29,0x2e,0x78,0x79,0x7a,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x76,0x20,0x3d,0x20,0x61,0x5f,0x54,0x65,0x78,
    0x63,0x6f,0x6f,0x72,0x64,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x5f,0x4e,0x6f,
    0x72,0x6d,0x61,0x6c,0x31,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,
    0x65,0x28,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x6d,0x75,0x6c,0x28,0x5f,0x33,0x39,
    0x2c,0x20,0x5f,0x31,0x34,0x5f,0x75,0x5f,0x4d,0x56,0x4d,0x61,0x74,0x72,0x69,0x78,
    0x29,0x2e,0x78,0x79,0x7a,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,
    0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x6d,0x75,0x6c,0x28,0x61,
    0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x5f,0x31,0x34,0x5f,0x75,
    0x5f,0x4d,0x56,0x50,0x4d,0x61,0x74,0x72,0x69,0x78,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,
    0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,
    0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x28,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,
    0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,
    0x69,0x6e,0x70,0x75,0x74,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x61,0x5f,0x50,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,
    0x69,0x6e,0x70,0x75,0x74,0x2e,0x61,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,
    0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x61,0x5f,0x4e,
    0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,0x5f,0x54,0x65,0x78,
    0x63,0x6f,0x6f,0x72,0x64,0x30,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,
    0x6e,0x70,0x75,0x74,0x2e,0x61,0x5f,0x54,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x30,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x72,0x74,0x5f,0x6d,0x61,0x69,0x6e,0x28,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,
    0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,
    0x6f,0x75,0x74,0x70,0x75,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,
    0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,
    0x74,0x70,0x75,0x74,0x2e,0x76,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x76,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,0x76,
    0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x76,0x5f,0x4e,0x6f,0x72,0x6d,
    0x61,0x6c,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,
    0x74,0x70,0x75,0x74,0x2e,0x75,0x76,0x20,0x3d,0x20,0x75,0x76,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,0x76,
    0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x31,0x20,0x3d,0x20,0x76,0x5f,0x4e,0x6f,0x72,
    0x6d,0x61,0x6c,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,
    0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x3b,0x0a,0x7d,
    0x0a,0x00,
};
/*
    cbuffer fs_params : register(b0)
    {
        float4 _29_u_LightPos : packoffset(c0);
        float4 _29_ambientColor : packoffset(c1);
        float4 _29_diffuseColor : packoffset(c2);
        float4 _29_specularColor : packoffset(c3);
    };

    Texture2D<float4> tex : register(t0);
    SamplerState smp : register(s0);

    static float3 v_Position;
    static float3 v_Normal;
    static float2 uv;
    static float3 v_Normal1;
    static float4 frag_color;

    struct SPIRV_Cross_Input
    {
        float3 v_Position : TEXCOORD0;
        float3 v_Normal : TEXCOORD1;
        float3 v_Normal1 : TEXCOORD2;
        float2 uv : TEXCOORD3;
    };

    struct SPIRV_Cross_Output
    {
        float4 frag_color : SV_Target0;
    };

    static float3 lightDirection;

    float3 phongBRDF(float3 lightDir, float3 viewDir, float3 normal, float3 phongDiffuseCol, float3 phongSpecularCol, float phongShininess)
    {
        return phongDiffuseCol + (phongSpecularCol * pow(max(dot(reflect(-lightDir, normal), viewDir), 0.0f), phongShininess));
    }

    float4 getPhong(float4 diffuseColor)
    {
        float3 _63 = normalize(-lightDirection);
        float3 _73 = normalize(v_Normal);
        float3 luminance = _29_ambientColor.xyz * 0.5f;
        float _84 = dot(_63, _73);
        if (_84 > 0.0f)
        {
            float3 param = _63;
            float3 param_1 = normalize(-v_Position);
            float3 param_2 = _73;
            float3 param_3 = diffuseColor.xyz;
            float3 param_4 = _29_specularColor.xyz;
            float param_5 = _29_specularColor.w * 1000.0f;
            luminance += (phongBRDF(param, param_1, param_2, param_3, param_4, param_5) * _84);
        }
        return float4(luminance, 1.0f);
    }

    void frag_main()
    {
        lightDirection = -_29_u_LightPos.xyz;
        float4 _146 = tex.Sample(smp, uv);
        float4 param = _29_diffuseColor;
        frag_color = float4(clamp(mad(_146.xyz, getPhong(param).xyz, (dot(normalize(v_Normal1), float3(0.0f, 0.447213590145111083984375f, 0.89442718029022216796875f)) * 0.1500000059604644775390625f).xxx), 0.0f.xxx, 1.0f.xxx), _146.w * _29_diffuseColor.w);
    }

    SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
    {
        v_Position = stage_input.v_Position;
        v_Normal = stage_input.v_Normal;
        uv = stage_input.uv;
        v_Normal1 = stage_input.v_Normal1;
        frag_main();
        SPIRV_Cross_Output stage_output;
        stage_output.frag_color = frag_color;
        return stage_output;
    }
*/
static const uint8_t fs_source_hlsl5[2274] = {
    0x63,0x62,0x75,0x66,0x66,0x65,0x72,0x20,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x62,0x30,0x29,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x5f,0x32,
    0x39,0x5f,0x75,0x5f,0x4c,0x69,0x67,0x68,0x74,0x50,0x6f,0x73,0x20,0x3a,0x20,0x70,
    0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x30,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x5f,0x32,0x39,0x5f,0x61,0x6d,
    0x62,0x69,0x65,0x6e,0x74,0x43,0x6f,0x6c,0x6f,0x72,0x20,0x3a,0x20,0x70,0x61,0x63,
    0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x31,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x5f,0x32,0x39,0x5f,0x64,0x69,0x66,0x66,
    0x75,0x73,0x65,0x43,0x6f,0x6c,0x6f,0x72,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,
    0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x32,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x20,0x5f,0x32,0x39,0x5f,0x73,0x70,0x65,0x63,0x75,0x6c,
    0x61,0x72,0x43,0x6f,0x6c,0x6f,0x72,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,
    0x66,0x73,0x65,0x74,0x28,0x63,0x33,0x29,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x54,0x65,
    0x78,0x74,0x75,0x72,0x65,0x32,0x44,0x3c,0x66,0x6c,0x6f,0x61,0x74,0x34,0x3e,0x20,
    0x74,0x65,0x78,0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x74,
    0x30,0x29,0x3b,0x0a,0x53,0x61,0x6d,0x70,0x6c,0x65,0x72,0x53,0x74,0x61,0x74,0x65,
    0x20,0x73,0x6d,0x70,0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,
    0x73,0x30,0x29,0x3b,0x0a,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x33,0x20,0x76,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,
    0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x5f,
    0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x32,0x20,0x75,0x76,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,
    0x31,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x0a,0x73,0x74,
    0x72,0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,
    0x5f,0x49,0x6e,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x33,0x20,0x76,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3a,
    0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x20,
    0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x31,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,
    0x31,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x32,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x75,0x76,0x20,0x3a,0x20,0x54,
    0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x33,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,
    0x72,0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,
    0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,
    0x3a,0x20,0x53,0x56,0x5f,0x54,0x61,0x72,0x67,0x65,0x74,0x30,0x3b,0x0a,0x7d,0x3b,
    0x0a,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,
    0x6c,0x69,0x67,0x68,0x74,0x44,0x69,0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,0x3b,0x0a,
    0x0a,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x68,0x6f,0x6e,0x67,0x42,0x52,0x44,
    0x46,0x28,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x6c,0x69,0x67,0x68,0x74,0x44,0x69,
    0x72,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x69,0x65,0x77,0x44,0x69,
    0x72,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,
    0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x68,0x6f,0x6e,0x67,0x44,0x69,
    0x66,0x66,0x75,0x73,0x65,0x43,0x6f,0x6c,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,
    0x20,0x70,0x68,0x6f,0x6e,0x67,0x53,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x43,0x6f,
    0x6c,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x68,0x6f,0x6e,0x67,0x53,0x68,
    0x69,0x6e,0x69,0x6e,0x65,0x73,0x73,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,
    0x65,0x74,0x75,0x72,0x6e,0x20,0x70,0x68,0x6f,0x6e,0x67,0x44,0x69,0x66,0x66,0x75,
    0x73,0x65,0x43,0x6f,0x6c,0x20,0x2b,0x20,0x28,0x70,0x68,0x6f,0x6e,0x67,0x53,0x70,
    0x65,0x63,0x75,0x6c,0x61,0x72,0x43,0x6f,0x6c,0x20,0x2a,0x20,0x70,0x6f,0x77,0x28,
    0x6d,0x61,0x78,0x28,0x64,0x6f,0x74,0x28,0x72,0x65,0x66,0x6c,0x65,0x63,0x74,0x28,
    0x2d,0x6c,0x69,0x67,0x68,0x74,0x44,0x69,0x72,0x2c,0x20,0x6e,0x6f,0x72,0x6d,0x61,
    0x6c,0x29,0x2c,0x20,0x76,0x69,0x65,0x77,0x44,0x69,0x72,0x29,0x2c,0x20,0x30,0x2e,
    0x30,0x66,0x29,0x2c,0x20,0x70,0x68,0x6f,0x6e,0x67,0x53,0x68,0x69,0x6e,0x69,0x6e,
    0x65,0x73,0x73,0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x20,0x67,0x65,0x74,0x50,0x68,0x6f,0x6e,0x67,0x28,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x20,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x43,0x6f,0x6c,0x6f,0x72,0x29,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x36,0x33,0x20,
    0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x2d,0x6c,0x69,0x67,
    0x68,0x74,0x44,0x69,0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x37,0x33,0x20,0x3d,0x20,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x76,0x5f,0x4e,0x6f,0x72,0x6d,0x61,
    0x6c,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x6c,
    0x75,0x6d,0x69,0x6e,0x61,0x6e,0x63,0x65,0x20,0x3d,0x20,0x5f,0x32,0x39,0x5f,0x61,
    0x6d,0x62,0x69,0x65,0x6e,0x74,0x43,0x6f,0x6c,0x6f,0x72,0x2e,0x78,0x79,0x7a,0x20,
    0x2a,0x20,0x30,0x2e,0x35,0x66,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x5f,0x38,0x34,0x20,0x3d,0x20,0x64,0x6f,0x74,0x28,0x5f,0x36,0x33,0x2c,
    0x20,0x5f,0x37,0x33,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,
    0x38,0x34,0x20,0x3e,0x20,0x30,0x2e,0x30,0x66,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x5f,0x36,0x33,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x31,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,
    0x2d,0x76,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x5f,0x37,0x33,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x33,0x20,0x3d,0x20,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x43,0x6f,0x6c,0x6f,
    0x72,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x20,0x3d,0x20,
    0x5f,0x32,0x39,0x5f,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x43,0x6f,0x6c,0x6f,
    0x72,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,0x20,0x3d,0x20,0x5f,
    0x32,0x39,0x5f,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x43,0x6f,0x6c,0x6f,0x72,
    0x2e,0x77,0x20,0x2a,0x20,0x31,0x30,0x30,0x30,0x2e,0x30,0x66,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x6c,0x75,0x6d,0x69,0x6e,0x61,0x6e,0x63,0x65,0x20,
    0x2b,0x3d,0x20,0x28,0x70,0x68,0x6f,0x6e,0x67,0x42,0x52,0x44,0x46,0x28,0x70,0x61,
    0x72,0x61,0x6d,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x2c,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x32,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x2c,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,
    0x29,0x20,0x2a,0x20,0x5f,0x38,0x34,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,
    0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x34,0x28,0x6c,0x75,0x6d,0x69,0x6e,0x61,0x6e,0x63,0x65,0x2c,0x20,0x31,0x2e,0x30,
    0x66,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x66,0x72,0x61,0x67,
    0x5f,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x6c,0x69,
    0x67,0x68,0x74,0x44,0x69,0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x2d,
    0x5f,0x32,0x39,0x5f,0x75,0x5f,0x4c,0x69,0x67,0x68,0x74,0x50,0x6f,0x73,0x2e,0x78,
    0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x5f,
    0x31,0x34,0x36,0x20,0x3d,0x20,0x74,0x65,0x78,0x2e,0x53,0x61,0x6d,0x70,0x6c,0x65,
    0x28,0x73,0x6d,0x70,0x2c,0x20,0x75,0x76,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x5f,0x32,
    0x39,0x5f,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x43,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x63,0x6c,0x61,0x6d,0x70,0x28,0x6d,0x61,
    0x64,0x28,0x5f,0x31,0x34,0x36,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x67,0x65,0x74,0x50,
    0x68,0x6f,0x6e,0x67,0x28,0x70,0x61,0x72,0x61,0x6d,0x29,0x2e,0x78,0x79,0x7a,0x2c,
    0x20,0x28,0x64,0x6f,0x74,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,
    0x76,0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x31,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x33,0x28,0x30,0x2e,0x30,0x66,0x2c,0x20,0x30,0x2e,0x34,0x34,0x37,0x32,0x31,
    0x33,0x35,0x39,0x30,0x31,0x34,0x35,0x31,0x31,0x31,0x30,0x38,0x33,0x39,0x38,0x34,
    0x33,0x37,0x35,0x66,0x2c,0x20,0x30,0x2e,0x38,0x39,0x34,0x34,0x32,0x37,0x31,0x38,
    0x30,0x32,0x39,0x30,0x32,0x32,0x32,0x31,0x36,0x37,0x39,0x36,0x38,0x37,0x35,0x66,
    0x29,0x29,0x20,0x2a,0x20,0x30,0x2e,0x31,0x35,0x30,0x30,0x30,0x30,0x30,0x30,0x35,
    0x39,0x36,0x30,0x34,0x36,0x34,0x34,0x37,0x37,0x35,0x33,0x39,0x30,0x36,0x32,0x35,
    0x66,0x29,0x2e,0x78,0x78,0x78,0x29,0x2c,0x20,0x30,0x2e,0x30,0x66,0x2e,0x78,0x78,
    0x78,0x2c,0x20,0x31,0x2e,0x30,0x66,0x2e,0x78,0x78,0x78,0x29,0x2c,0x20,0x5f,0x31,
    0x34,0x36,0x2e,0x77,0x20,0x2a,0x20,0x5f,0x32,0x39,0x5f,0x64,0x69,0x66,0x66,0x75,
    0x73,0x65,0x43,0x6f,0x6c,0x6f,0x72,0x2e,0x77,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x53,
    0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,
    0x74,0x20,0x6d,0x61,0x69,0x6e,0x28,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,
    0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,
    0x6e,0x70,0x75,0x74,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x5f,0x50,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,
    0x6e,0x70,0x75,0x74,0x2e,0x76,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x76,0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,
    0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x76,0x5f,0x4e,0x6f,
    0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x76,0x20,0x3d,0x20,0x73,
    0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x75,0x76,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x76,0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x31,0x20,0x3d,0x20,0x73,
    0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x76,0x5f,0x4e,0x6f,0x72,
    0x6d,0x61,0x6c,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x6d,
    0x61,0x69,0x6e,0x28,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x53,0x50,0x49,0x52,0x56,
    0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x20,0x73,0x74,
    0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,0x66,0x72,0x61,
    0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,
    0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,
    0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x3b,0x0a,0x7d,
    0x0a,0x00,
};
/*
    #include <metal_stdlib>
    #include <simd/simd.h>

    using namespace metal;

    struct vs_params
    {
        float4x4 u_MVMatrix;
        float4x4 u_MVPMatrix;
        float4x4 u_NMatrix;
    };

    struct main0_out
    {
        float3 v_Position [[user(locn0)]];
        float3 v_Normal [[user(locn1)]];
        float3 v_Normal1 [[user(locn2)]];
        float2 uv [[user(locn3)]];
        float4 gl_Position [[position]];
    };

    struct main0_in
    {
        float4 a_Position [[attribute(0)]];
        float3 a_Normal [[attribute(1)]];
        float2 a_Texcoord0 [[attribute(2)]];
    };

    vertex main0_out main0(main0_in in [[stage_in]], constant vs_params& _14 [[buffer(0)]])
    {
        main0_out out = {};
        out.v_Position = float3((_14.u_MVMatrix * in.a_Position).xyz);
        float4 _39 = float4(in.a_Normal, 1.0);
        out.v_Normal = float3((_14.u_NMatrix * _39).xyz);
        out.uv = in.a_Texcoord0;
        out.v_Normal1 = fast::normalize(float3((_14.u_MVMatrix * _39).xyz));
        out.gl_Position = _14.u_MVPMatrix * in.a_Position;
        return out;
    }

*/
static const uint8_t vs_source_metal_macos[971] = {
    0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,
    0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,
    0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,
    0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,
    0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x76,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x75,0x5f,0x4d,0x56,0x4d,0x61,0x74,0x72,
    0x69,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,
    0x20,0x75,0x5f,0x4d,0x56,0x50,0x4d,0x61,0x74,0x72,0x69,0x78,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x75,0x5f,0x4e,0x4d,0x61,
    0x74,0x72,0x69,0x78,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,
    0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x30,0x29,
    0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,
    0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,
    0x6f,0x63,0x6e,0x31,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x33,0x20,0x76,0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x31,0x20,0x5b,0x5b,
    0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x32,0x29,0x5d,0x5d,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x75,0x76,0x20,0x5b,0x5b,0x75,
    0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x33,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x20,0x5b,0x5b,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x5d,
    0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,
    0x69,0x6e,0x30,0x5f,0x69,0x6e,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x20,0x61,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x5b,
    0x5b,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x28,0x30,0x29,0x5d,0x5d,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x61,0x5f,0x4e,0x6f,
    0x72,0x6d,0x61,0x6c,0x20,0x5b,0x5b,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,
    0x28,0x31,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x32,0x20,0x61,0x5f,0x54,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x30,0x20,0x5b,0x5b,
    0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x28,0x32,0x29,0x5d,0x5d,0x3b,0x0a,
    0x7d,0x3b,0x0a,0x0a,0x76,0x65,0x72,0x74,0x65,0x78,0x20,0x6d,0x61,0x69,0x6e,0x30,
    0x5f,0x6f,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x28,0x6d,0x61,0x69,0x6e,0x30,
    0x5f,0x69,0x6e,0x20,0x69,0x6e,0x20,0x5b,0x5b,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,
    0x6e,0x5d,0x5d,0x2c,0x20,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,0x74,0x20,0x76,0x73,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x26,0x20,0x5f,0x31,0x34,0x20,0x5b,0x5b,0x62,
    0x75,0x66,0x66,0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,0x29,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6f,0x75,0x74,0x20,
    0x3d,0x20,0x7b,0x7d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x76,0x5f,
    0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x28,0x28,0x5f,0x31,0x34,0x2e,0x75,0x5f,0x4d,0x56,0x4d,0x61,0x74,0x72,0x69,
    0x78,0x20,0x2a,0x20,0x69,0x6e,0x2e,0x61,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,
    0x6e,0x29,0x2e,0x78,0x79,0x7a,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x20,0x5f,0x33,0x39,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x28,0x69,0x6e,0x2e,0x61,0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x31,0x2e,
    0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x76,0x5f,0x4e,0x6f,
    0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x28,0x5f,
    0x31,0x34,0x2e,0x75,0x5f,0x4e,0x4d,0x61,0x74,0x72,0x69,0x78,0x20,0x2a,0x20,0x5f,
    0x33,0x39,0x29,0x2e,0x78,0x79,0x7a,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,
    0x74,0x2e,0x75,0x76,0x20,0x3d,0x20,0x69,0x6e,0x2e,0x61,0x5f,0x54,0x65,0x78,0x63,
    0x6f,0x6f,0x72,0x64,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x76,
    0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x31,0x20,0x3d,0x20,0x66,0x61,0x73,0x74,0x3a,
    0x3a,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x28,0x28,0x5f,0x31,0x34,0x2e,0x75,0x5f,0x4d,0x56,0x4d,0x61,0x74,0x72,0x69,
    0x78,0x20,0x2a,0x20,0x5f,0x33,0x39,0x29,0x2e,0x78,0x79,0x7a,0x29,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x20,0x3d,0x20,0x5f,0x31,0x34,0x2e,0x75,0x5f,0x4d,0x56,0x50,0x4d,
    0x61,0x74,0x72,0x69,0x78,0x20,0x2a,0x20,0x69,0x6e,0x2e,0x61,0x5f,0x50,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,
    0x6e,0x20,0x6f,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #pragma clang diagnostic ignored "-Wmissing-prototypes"

    #include <metal_stdlib>
    #include <simd/simd.h>

    using namespace metal;

    struct fs_params
    {
        float4 u_LightPos;
        float4 ambientColor;
        float4 diffuseColor;
        float4 specularColor;
    };

    struct main0_out
    {
        float4 frag_color [[color(0)]];
    };

    struct main0_in
    {
        float3 v_Position [[user(locn0)]];
        float3 v_Normal [[user(locn1)]];
        float3 v_Normal1 [[user(locn2)]];
        float2 uv [[user(locn3)]];
    };

    static inline __attribute__((always_inline))
    float3 phongBRDF(thread const float3& lightDir, thread const float3& viewDir, thread const float3& normal, thread const float3& phongDiffuseCol, thread const float3& phongSpecularCol, thread const float& phongShininess)
    {
        return phongDiffuseCol + (phongSpecularCol * pow(fast::max(dot(reflect(-lightDir, normal), viewDir), 0.0), phongShininess));
    }

    static inline __attribute__((always_inline))
    float4 getPhong(thread const float4& diffuseColor, thread float3& lightDirection, constant fs_params& _29, thread float3& v_Position, thread float3& v_Normal)
    {
        float3 _63 = fast::normalize(-lightDirection);
        float3 _73 = fast::normalize(v_Normal);
        float3 luminance = _29.ambientColor.xyz * 0.5;
        float _84 = dot(_63, _73);
        if (_84 > 0.0)
        {
            float3 param = _63;
            float3 param_1 = fast::normalize(-v_Position);
            float3 param_2 = _73;
            float3 param_3 = diffuseColor.xyz;
            float3 param_4 = _29.specularColor.xyz;
            float param_5 = _29.specularColor.w * 1000.0;
            luminance += (phongBRDF(param, param_1, param_2, param_3, param_4, param_5) * _84);
        }
        return float4(luminance, 1.0);
    }

    fragment main0_out main0(main0_in in [[stage_in]], constant fs_params& _29 [[buffer(0)]], texture2d<float> tex [[texture(0)]], sampler smp [[sampler(0)]])
    {
        main0_out out = {};
        float3 lightDirection = -_29.u_LightPos.xyz;
        float4 _146 = tex.sample(smp, in.uv);
        float4 param = _29.diffuseColor;
        out.frag_color = float4(fast::clamp(fma(_146.xyz, getPhong(param, lightDirection, _29, in.v_Position, in.v_Normal).xyz, float3(dot(fast::normalize(in.v_Normal1), float3(0.0, 0.447213590145111083984375, 0.89442718029022216796875)) * 0.1500000059604644775390625)), float3(0.0), float3(1.0)), _146.w * _29.diffuseColor.w);
        return out;
    }

*/
static const uint8_t fs_source_metal_macos[2331] = {
    0x23,0x70,0x72,0x61,0x67,0x6d,0x61,0x20,0x63,0x6c,0x61,0x6e,0x67,0x20,0x64,0x69,
    0x61,0x67,0x6e,0x6f,0x73,0x74,0x69,0x63,0x20,0x69,0x67,0x6e,0x6f,0x72,0x65,0x64,
    0x20,0x22,0x2d,0x57,0x6d,0x69,0x73,0x73,0x69,0x6e,0x67,0x2d,0x70,0x72,0x6f,0x74,
    0x6f,0x74,0x79,0x70,0x65,0x73,0x22,0x0a,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,
    0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,
    0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,
    0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,
    0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,
    0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x75,
    0x5f,0x4c,0x69,0x67,0x68,0x74,0x50,0x6f,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x20,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x43,0x6f,0x6c,
    0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x64,
    0x69,0x66,0x66,0x75,0x73,0x65,0x43,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,
    0x43,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,
    0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,
    0x6c,0x6f,0x72,0x20,0x5b,0x5b,0x63,0x6f,0x6c,0x6f,0x72,0x28,0x30,0x29,0x5d,0x5d,
    0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,
    0x6e,0x30,0x5f,0x69,0x6e,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x33,0x20,0x76,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x5b,0x5b,
    0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x5f,0x4e,0x6f,0x72,0x6d,
    0x61,0x6c,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x31,0x29,
    0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,
    0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x31,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,
    0x6c,0x6f,0x63,0x6e,0x32,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x32,0x20,0x75,0x76,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,
    0x6f,0x63,0x6e,0x33,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x61,
    0x74,0x69,0x63,0x20,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x20,0x5f,0x5f,0x61,0x74,0x74,
    0x72,0x69,0x62,0x75,0x74,0x65,0x5f,0x5f,0x28,0x28,0x61,0x6c,0x77,0x61,0x79,0x73,
    0x5f,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x29,0x29,0x0a,0x66,0x6c,0x6f,0x61,0x74,0x33,
    0x20,0x70,0x68,0x6f,0x6e,0x67,0x42,0x52,0x44,0x46,0x28,0x74,0x68,0x72,0x65,0x61,
    0x64,0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,
    0x6c,0x69,0x67,0x68,0x74,0x44,0x69,0x72,0x2c,0x20,0x74,0x68,0x72,0x65,0x61,0x64,
    0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,0x76,
    0x69,0x65,0x77,0x44,0x69,0x72,0x2c,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,
    0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,0x6e,0x6f,0x72,
    0x6d,0x61,0x6c,0x2c,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,0x6f,0x6e,0x73,
    0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,0x70,0x68,0x6f,0x6e,0x67,0x44,
    0x69,0x66,0x66,0x75,0x73,0x65,0x43,0x6f,0x6c,0x2c,0x20,0x74,0x68,0x72,0x65,0x61,
    0x64,0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,
    0x70,0x68,0x6f,0x6e,0x67,0x53,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x43,0x6f,0x6c,
    0x2c,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x26,0x20,0x70,0x68,0x6f,0x6e,0x67,0x53,0x68,0x69,0x6e,0x69,
    0x6e,0x65,0x73,0x73,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,
    0x72,0x6e,0x20,0x70,0x68,0x6f,0x6e,0x67,0x44,0x69,0x66,0x66,0x75,0x73,0x65,0x43,
    0x6f,0x6c,0x20,0x2b,0x20,0x28,0x70,0x68,0x6f,0x6e,0x67,0x53,0x70,0x65,0x63,0x75,
    0x6c,0x61,0x72,0x43,0x6f,0x6c,0x20,0x2a,0x20,0x70,0x6f,0x77,0x28,0x66,0x61,0x73,
    0x74,0x3a,0x3a,0x6d,0x61,0x78,0x28,0x64,0x6f,0x74,0x28,0x72,0x65,0x66,0x6c,0x65,
    0x63,0x74,0x28,0x2d,0x6c,0x69,0x67,0x68,0x74,0x44,0x69,0x72,0x2c,0x20,0x6e,0x6f,
    0x72,0x6d,0x61,0x6c,0x29,0x2c,0x20,0x76,0x69,0x65,0x77,0x44,0x69,0x72,0x29,0x2c,
    0x20,0x30,0x2e,0x30,0x29,0x2c,0x20,0x70,0x68,0x6f,0x6e,0x67,0x53,0x68,0x69,0x6e,
    0x69,0x6e,0x65,0x73,0x73,0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x73,0x74,0x61,0x74,
    0x69,0x63,0x20,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x20,0x5f,0x5f,0x61,0x74,0x74,0x72,
    0x69,0x62,0x75,0x74,0x65,0x5f,0x5f,0x28,0x28,0x61,0x6c,0x77,0x61,0x79,0x73,0x5f,
    0x69,0x6e,0x6c,0x69,0x6e,0x65,0x29,0x29,0x0a,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,
    0x67,0x65,0x74,0x50,0x68,0x6f,0x6e,0x67,0x28,0x74,0x68,0x72,0x65,0x61,0x64,0x20,
    0x63,0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x26,0x20,0x64,0x69,
    0x66,0x66,0x75,0x73,0x65,0x43,0x6f,0x6c,0x6f,0x72,0x2c,0x20,0x74,0x68,0x72,0x65,
    0x61,0x64,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,0x6c,0x69,0x67,0x68,0x74,
    0x44,0x69,0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x63,0x6f,0x6e,0x73,0x74,
    0x61,0x6e,0x74,0x20,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x26,0x20,0x5f,
    0x32,0x39,0x2c,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x26,0x20,0x76,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x74,
    0x68,0x72,0x65,0x61,0x64,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,0x76,0x5f,
    0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x33,0x20,0x5f,0x36,0x33,0x20,0x3d,0x20,0x66,0x61,0x73,0x74,0x3a,
    0x3a,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x2d,0x6c,0x69,0x67,0x68,
    0x74,0x44,0x69,0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x37,0x33,0x20,0x3d,0x20,0x66,0x61,
    0x73,0x74,0x3a,0x3a,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x76,0x5f,
    0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x33,0x20,0x6c,0x75,0x6d,0x69,0x6e,0x61,0x6e,0x63,0x65,0x20,0x3d,0x20,
    0x5f,0x32,0x39,0x2e,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x43,0x6f,0x6c,0x6f,0x72,
    0x2e,0x78,0x79,0x7a,0x20,0x2a,0x20,0x30,0x2e,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x38,0x34,0x20,0x3d,0x20,0x64,0x6f,0x74,0x28,
    0x5f,0x36,0x33,0x2c,0x20,0x5f,0x37,0x33,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,
    0x66,0x20,0x28,0x5f,0x38,0x34,0x20,0x3e,0x20,0x30,0x2e,0x30,0x29,0x0a,0x20,0x20,
    0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x5f,0x36,0x33,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x66,0x61,0x73,0x74,0x3a,0x3a,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x2d,0x76,0x5f,0x50,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,
    0x5f,0x37,0x33,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,0x64,0x69,
    0x66,0x66,0x75,0x73,0x65,0x43,0x6f,0x6c,0x6f,0x72,0x2e,0x78,0x79,0x7a,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x34,0x20,0x3d,0x20,0x5f,0x32,0x39,0x2e,0x73,0x70,0x65,
    0x63,0x75,0x6c,0x61,0x72,0x43,0x6f,0x6c,0x6f,0x72,0x2e,0x78,0x79,0x7a,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x35,0x20,0x3d,0x20,0x5f,0x32,0x39,0x2e,0x73,0x70,0x65,0x63,
    0x75,0x6c,0x61,0x72,0x43,0x6f,0x6c,0x6f,0x72,0x2e,0x77,0x20,0x2a,0x20,0x31,0x30,
    0x30,0x30,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x6c,0x75,
    0x6d,0x69,0x6e,0x61,0x6e,0x63,0x65,0x20,0x2b,0x3d,0x20,0x28,0x70,0x68,0x6f,0x6e,
    0x67,0x42,0x52,0x44,0x46,0x28,0x70,0x61,0x72,0x61,0x6d,0x2c,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x31,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x2c,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x33,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x2c,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,0x29,0x20,0x2a,0x20,0x5f,0x38,0x34,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,
    0x72,0x6e,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x6c,0x75,0x6d,0x69,0x6e,0x61,
    0x6e,0x63,0x65,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x66,0x72,
    0x61,0x67,0x6d,0x65,0x6e,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,
    0x20,0x6d,0x61,0x69,0x6e,0x30,0x28,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x20,
    0x69,0x6e,0x20,0x5b,0x5b,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x5d,0x5d,0x2c,
    0x20,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,0x74,0x20,0x66,0x73,0x5f,0x70,0x61,0x72,
    0x61,0x6d,0x73,0x26,0x20,0x5f,0x32,0x39,0x20,0x5b,0x5b,0x62,0x75,0x66,0x66,0x65,
    0x72,0x28,0x30,0x29,0x5d,0x5d,0x2c,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x32,
    0x64,0x3c,0x66,0x6c,0x6f,0x61,0x74,0x3e,0x20,0x74,0x65,0x78,0x20,0x5b,0x5b,0x74,
    0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x30,0x29,0x5d,0x5d,0x2c,0x20,0x73,0x61,0x6d,
    0x70,0x6c,0x65,0x72,0x20,0x73,0x6d,0x70,0x20,0x5b,0x5b,0x73,0x61,0x6d,0x70,0x6c,
    0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x6d,
    0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6f,0x75,0x74,0x20,0x3d,0x20,0x7b,
    0x7d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x6c,0x69,
    0x67,0x68,0x74,0x44,0x69,0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x2d,
    0x5f,0x32,0x39,0x2e,0x75,0x5f,0x4c,0x69,0x67,0x68,0x74,0x50,0x6f,0x73,0x2e,0x78,
    0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x5f,
    0x31,0x34,0x36,0x20,0x3d,0x20,0x74,0x65,0x78,0x2e,0x73,0x61,0x6d,0x70,0x6c,0x65,
    0x28,0x73,0x6d,0x70,0x2c,0x20,0x69,0x6e,0x2e,0x75,0x76,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,
    0x20,0x5f,0x32,0x39,0x2e,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x43,0x6f,0x6c,0x6f,
    0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x66,0x72,0x61,0x67,0x5f,
    0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x66,
    0x61,0x73,0x74,0x3a,0x3a,0x63,0x6c,0x61,0x6d,0x70,0x28,0x66,0x6d,0x61,0x28,0x5f,
    0x31,0x34,0x36,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x67,0x65,0x74,0x50,0x68,0x6f,0x6e,
    0x67,0x28,0x70,0x61,0x72,0x61,0x6d,0x2c,0x20,0x6c,0x69,0x67,0x68,0x74,0x44,0x69,
    0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x5f,0x32,0x39,0x2c,0x20,0x69,0x6e,
    0x2e,0x76,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x69,0x6e,0x2e,
    0x76,0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x29,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x33,0x28,0x64,0x6f,0x74,0x28,0x66,0x61,0x73,0x74,0x3a,0x3a,
    0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x69,0x6e,0x2e,0x76,0x5f,0x4e,
    0x6f,0x72,0x6d,0x61,0x6c,0x31,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,
    0x30,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x34,0x34,0x37,0x32,0x31,0x33,0x35,0x39,0x30,
    0x31,0x34,0x35,0x31,0x31,0x31,0x30,0x38,0x33,0x39,0x38,0x34,0x33,0x37,0x35,0x2c,
    0x20,0x30,0x2e,0x38,0x39,0x34,0x34,0x32,0x37,0x31,0x38,0x30,0x32,0x39,0x30,0x32,
    0x32,0x32,0x31,0x36,0x37,0x39,0x36,0x38,0x37,0x35,0x29,0x29,0x20,0x2a,0x20,0x30,
    0x2e,0x31,0x35,0x30,0x30,0x30,0x30,0x30,0x30,0x35,0x39,0x36,0x30,0x34,0x36,0x34,
    0x34,0x37,0x37,0x35,0x33,0x39,0x30,0x36,0x32,0x35,0x29,0x29,0x2c,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x33,0x28,0x30,0x2e,0x30,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x28,0x31,0x2e,0x30,0x29,0x29,0x2c,0x20,0x5f,0x31,0x34,0x36,0x2e,0x77,0x20,
    0x2a,0x20,0x5f,0x32,0x39,0x2e,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x43,0x6f,0x6c,
    0x6f,0x72,0x2e,0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,
    0x6e,0x20,0x6f,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #include <metal_stdlib>
    #include <simd/simd.h>

    using namespace metal;

    struct vs_params
    {
        float4x4 u_MVMatrix;
        float4x4 u_MVPMatrix;
        float4x4 u_NMatrix;
    };

    struct main0_out
    {
        float3 v_Position [[user(locn0)]];
        float3 v_Normal [[user(locn1)]];
        float3 v_Normal1 [[user(locn2)]];
        float2 uv [[user(locn3)]];
        float4 gl_Position [[position]];
    };

    struct main0_in
    {
        float4 a_Position [[attribute(0)]];
        float3 a_Normal [[attribute(1)]];
        float2 a_Texcoord0 [[attribute(2)]];
    };

    vertex main0_out main0(main0_in in [[stage_in]], constant vs_params& _14 [[buffer(0)]])
    {
        main0_out out = {};
        out.v_Position = float3((_14.u_MVMatrix * in.a_Position).xyz);
        float4 _39 = float4(in.a_Normal, 1.0);
        out.v_Normal = float3((_14.u_NMatrix * _39).xyz);
        out.uv = in.a_Texcoord0;
        out.v_Normal1 = fast::normalize(float3((_14.u_MVMatrix * _39).xyz));
        out.gl_Position = _14.u_MVPMatrix * in.a_Position;
        return out;
    }

*/
static const uint8_t vs_source_metal_ios[971] = {
    0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,
    0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,
    0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,
    0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,
    0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x76,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x75,0x5f,0x4d,0x56,0x4d,0x61,0x74,0x72,
    0x69,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,
    0x20,0x75,0x5f,0x4d,0x56,0x50,0x4d,0x61,0x74,0x72,0x69,0x78,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x75,0x5f,0x4e,0x4d,0x61,
    0x74,0x72,0x69,0x78,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,
    0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x30,0x29,
    0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,
    0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,
    0x6f,0x63,0x6e,0x31,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x33,0x20,0x76,0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x31,0x20,0x5b,0x5b,
    0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x32,0x29,0x5d,0x5d,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x75,0x76,0x20,0x5b,0x5b,0x75,
    0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x33,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x20,0x5b,0x5b,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x5d,
    0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,
    0x69,0x6e,0x30,0x5f,0x69,0x6e,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x20,0x61,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x5b,
    0x5b,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x28,0x30,0x29,0x5d,0x5d,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x61,0x5f,0x4e,0x6f,
    0x72,0x6d,0x61,0x6c,0x20,0x5b,0x5b,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,
    0x28,0x31,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x32,0x20,0x61,0x5f,0x54,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x30,0x20,0x5b,0x5b,
    0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x28,0x32,0x29,0x5d,0x5d,0x3b,0x0a,
    0x7d,0x3b,0x0a,0x0a,0x76,0x65,0x72,0x74,0x65,0x78,0x20,0x6d,0x61,0x69,0x6e,0x30,
    0x5f,0x6f,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x28,0x6d,0x61,0x69,0x6e,0x30,
    0x5f,0x69,0x6e,0x20,0x69,0x6e,0x20,0x5b,0x5b,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,
    0x6e,0x5d,0x5d,0x2c,0x20,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,0x74,0x20,0x76,0x73,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x26,0x20,0x5f,0x31,0x34,0x20,0x5b,0x5b,0x62,
    0x75,0x66,0x66,0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,0x29,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6f,0x75,0x74,0x20,
    0x3d,0x20,0x7b,0x7d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x76,0x5f,
    0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x28,0x28,0x5f,0x31,0x34,0x2e,0x75,0x5f,0x4d,0x56,0x4d,0x61,0x74,0x72,0x69,
    0x78,0x20,0x2a,0x20,0x69,0x6e,0x2e,0x61,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,
    0x6e,0x29,0x2e,0x78,0x79,0x7a,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x20,0x5f,0x33,0x39,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x28,0x69,0x6e,0x2e,0x61,0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x31,0x2e,
    0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x76,0x5f,0x4e,0x6f,
    0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x28,0x5f,
    0x31,0x34,0x2e,0x75,0x5f,0x4e,0x4d,0x61,0x74,0x72,0x69,0x78,0x20,0x2a,0x20,0x5f,
    0x33,0x39,0x29,0x2e,0x78,0x79,0x7a,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,
    0x74,0x2e,0x75,0x76,0x20,0x3d,0x20,0x69,0x6e,0x2e,0x61,0x5f,0x54,0x65,0x78,0x63,
    0x6f,0x6f,0x72,0x64,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x76,
    0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x31,0x20,0x3d,0x20,0x66,0x61,0x73,0x74,0x3a,
    0x3a,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x28,0x28,0x5f,0x31,0x34,0x2e,0x75,0x5f,0x4d,0x56,0x4d,0x61,0x74,0x72,0x69,
    0x78,0x20,0x2a,0x20,0x5f,0x33,0x39,0x29,0x2e,0x78,0x79,0x7a,0x29,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x20,0x3d,0x20,0x5f,0x31,0x34,0x2e,0x75,0x5f,0x4d,0x56,0x50,0x4d,
    0x61,0x74,0x72,0x69,0x78,0x20,0x2a,0x20,0x69,0x6e,0x2e,0x61,0x5f,0x50,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,
    0x6e,0x20,0x6f,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #pragma clang diagnostic ignored "-Wmissing-prototypes"

    #include <metal_stdlib>
    #include <simd/simd.h>

    using namespace metal;

    struct fs_params
    {
        float4 u_LightPos;
        float4 ambientColor;
        float4 diffuseColor;
        float4 specularColor;
    };

    struct main0_out
    {
        float4 frag_color [[color(0)]];
    };

    struct main0_in
    {
        float3 v_Position [[user(locn0)]];
        float3 v_Normal [[user(locn1)]];
        float3 v_Normal1 [[user(locn2)]];
        float2 uv [[user(locn3)]];
    };

    static inline __attribute__((always_inline))
    float3 phongBRDF(thread const float3& lightDir, thread const float3& viewDir, thread const float3& normal, thread const float3& phongDiffuseCol, thread const float3& phongSpecularCol, thread const float& phongShininess)
    {
        return phongDiffuseCol + (phongSpecularCol * pow(fast::max(dot(reflect(-lightDir, normal), viewDir), 0.0), phongShininess));
    }

    static inline __attribute__((always_inline))
    float4 getPhong(thread const float4& diffuseColor, thread float3& lightDirection, constant fs_params& _29, thread float3& v_Position, thread float3& v_Normal)
    {
        float3 _63 = fast::normalize(-lightDirection);
        float3 _73 = fast::normalize(v_Normal);
        float3 luminance = _29.ambientColor.xyz * 0.5;
        float _84 = dot(_63, _73);
        if (_84 > 0.0)
        {
            float3 param = _63;
            float3 param_1 = fast::normalize(-v_Position);
            float3 param_2 = _73;
            float3 param_3 = diffuseColor.xyz;
            float3 param_4 = _29.specularColor.xyz;
            float param_5 = _29.specularColor.w * 1000.0;
            luminance += (phongBRDF(param, param_1, param_2, param_3, param_4, param_5) * _84);
        }
        return float4(luminance, 1.0);
    }

    fragment main0_out main0(main0_in in [[stage_in]], constant fs_params& _29 [[buffer(0)]], texture2d<float> tex [[texture(0)]], sampler smp [[sampler(0)]])
    {
        main0_out out = {};
        float3 lightDirection = -_29.u_LightPos.xyz;
        float4 _146 = tex.sample(smp, in.uv);
        float4 param = _29.diffuseColor;
        out.frag_color = float4(fast::clamp(fma(_146.xyz, getPhong(param, lightDirection, _29, in.v_Position, in.v_Normal).xyz, float3(dot(fast::normalize(in.v_Normal1), float3(0.0, 0.447213590145111083984375, 0.89442718029022216796875)) * 0.1500000059604644775390625)), float3(0.0), float3(1.0)), _146.w * _29.diffuseColor.w);
        return out;
    }

*/
static const uint8_t fs_source_metal_ios[2331] = {
    0x23,0x70,0x72,0x61,0x67,0x6d,0x61,0x20,0x63,0x6c,0x61,0x6e,0x67,0x20,0x64,0x69,
    0x61,0x67,0x6e,0x6f,0x73,0x74,0x69,0x63,0x20,0x69,0x67,0x6e,0x6f,0x72,0x65,0x64,
    0x20,0x22,0x2d,0x57,0x6d,0x69,0x73,0x73,0x69,0x6e,0x67,0x2d,0x70,0x72,0x6f,0x74,
    0x6f,0x74,0x79,0x70,0x65,0x73,0x22,0x0a,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,
    0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,
    0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,
    0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,
    0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,
    0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x75,
    0x5f,0x4c,0x69,0x67,0x68,0x74,0x50,0x6f,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x20,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x43,0x6f,0x6c,
    0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x64,
    0x69,0x66,0x66,0x75,0x73,0x65,0x43,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,
    0x43,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,
    0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,
    0x6c,0x6f,0x72,0x20,0x5b,0x5b,0x63,0x6f,0x6c,0x6f,0x72,0x28,0x30,0x29,0x5d,0x5d,
    0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,
    0x6e,0x30,0x5f,0x69,0x6e,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x33,0x20,0x76,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x5b,0x5b,
    0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x5f,0x4e,0x6f,0x72,0x6d,
    0x61,0x6c,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x31,0x29,
    0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,
    0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x31,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,
    0x6c,0x6f,0x63,0x6e,0x32,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x32,0x20,0x75,0x76,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,
    0x6f,0x63,0x6e,0x33,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x61,
    0x74,0x69,0x63,0x20,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x20,0x5f,0x5f,0x61,0x74,0x74,
    0x72,0x69,0x62,0x75,0x74,0x65,0x5f,0x5f,0x28,0x28,0x61,0x6c,0x77,0x61,0x79,0x73,
    0x5f,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x29,0x29,0x0a,0x66,0x6c,0x6f,0x61,0x74,0x33,
    0x20,0x70,0x68,0x6f,0x6e,0x67,0x42,0x52,0x44,0x46,0x28,0x74,0x68,0x72,0x65,0x61,
    0x64,0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,
    0x6c,0x69,0x67,0x68,0x74,0x44,0x69,0x72,0x2c,0x20,0x74,0x68,0x72,0x65,0x61,0x64,
    0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,0x76,
    0x69,0x65,0x77,0x44,0x69,0x72,0x2c,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,
    0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,0x6e,0x6f,0x72,
    0x6d,0x61,0x6c,0x2c,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,0x6f,0x6e,0x73,
    0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,0x70,0x68,0x6f,0x6e,0x67,0x44,
    0x69,0x66,0x66,0x75,0x73,0x65,0x43,0x6f,0x6c,0x2c,0x20,0x74,0x68,0x72,0x65,0x61,
    0x64,0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,
    0x70,0x68,0x6f,0x6e,0x67,0x53,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x43,0x6f,0x6c,
    0x2c,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x26,0x20,0x70,0x68,0x6f,0x6e,0x67,0x53,0x68,0x69,0x6e,0x69,
    0x6e,0x65,0x73,0x73,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,
    0x72,0x6e,0x20,0x70,0x68,0x6f,0x6e,0x67,0x44,0x69,0x66,0x66,0x75,0x73,0x65,0x43,
    0x6f,0x6c,0x20,0x2b,0x20,0x28,0x70,0x68,0x6f,0x6e,0x67,0x53,0x70,0x65,0x63,0x75,
    0x6c,0x61,0x72,0x43,0x6f,0x6c,0x20,0x2a,0x20,0x70,0x6f,0x77,0x28,0x66,0x61,0x73,
    0x74,0x3a,0x3a,0x6d,0x61,0x78,0x28,0x64,0x6f,0x74,0x28,0x72,0x65,0x66,0x6c,0x65,
    0x63,0x74,0x28,0x2d,0x6c,0x69,0x67,0x68,0x74,0x44,0x69,0x72,0x2c,0x20,0x6e,0x6f,
    0x72,0x6d,0x61,0x6c,0x29,0x2c,0x20,0x76,0x69,0x65,0x77,0x44,0x69,0x72,0x29,0x2c,
    0x20,0x30,0x2e,0x30,0x29,0x2c,0x20,0x70,0x68,0x6f,0x6e,0x67,0x53,0x68,0x69,0x6e,
    0x69,0x6e,0x65,0x73,0x73,0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x73,0x74,0x61,0x74,
    0x69,0x63,0x20,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x20,0x5f,0x5f,0x61,0x74,0x74,0x72,
    0x69,0x62,0x75,0x74,0x65,0x5f,0x5f,0x28,0x28,0x61,0x6c,0x77,0x61,0x79,0x73,0x5f,
    0x69,0x6e,0x6c,0x69,0x6e,0x65,0x29,0x29,0x0a,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,
    0x67,0x65,0x74,0x50,0x68,0x6f,0x6e,0x67,0x28,0x74,0x68,0x72,0x65,0x61,0x64,0x20,
    0x63,0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x26,0x20,0x64,0x69,
    0x66,0x66,0x75,0x73,0x65,0x43,0x6f,0x6c,0x6f,0x72,0x2c,0x20,0x74,0x68,0x72,0x65,
    0x61,0x64,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,0x6c,0x69,0x67,0x68,0x74,
    0x44,0x69,0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x63,0x6f,0x6e,0x73,0x74,
    0x61,0x6e,0x74,0x20,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x26,0x20,0x5f,
    0x32,0x39,0x2c,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x26,0x20,0x76,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x74,
    0x68,0x72,0x65,0x61,0x64,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,0x76,0x5f,
    0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x33,0x20,0x5f,0x36,0x33,0x20,0x3d,0x20,0x66,0x61,0x73,0x74,0x3a,
    0x3a,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x2d,0x6c,0x69,0x67,0x68,
    0x74,0x44,0x69,0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x37,0x33,0x20,0x3d,0x20,0x66,0x61,
    0x73,0x74,0x3a,0x3a,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x76,0x5f,
    0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x33,0x20,0x6c,0x75,0x6d,0x69,0x6e,0x61,0x6e,0x63,0x65,0x20,0x3d,0x20,
    0x5f,0x32,0x39,0x2e,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x43,0x6f,0x6c,0x6f,0x72,
    0x2e,0x78,0x79,0x7a,0x20,0x2a,0x20,0x30,0x2e,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x38,0x34,0x20,0x3d,0x20,0x64,0x6f,0x74,0x28,
    0x5f,0x36,0x33,0x2c,0x20,0x5f,0x37,0x33,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,
    0x66,0x20,0x28,0x5f,0x38,0x34,0x20,0x3e,0x20,0x30,0x2e,0x30,0x29,0x0a,0x20,0x20,
    0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x5f,0x36,0x33,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x66,0x61,0x73,0x74,0x3a,0x3a,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x2d,0x76,0x5f,0x50,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,
    0x5f,0x37,0x33,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,0x64,0x69,
    0x66,0x66,0x75,0x73,0x65,0x43,0x6f,0x6c,0x6f,0x72,0x2e,0x78,0x79,0x7a,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x34,0x20,0x3d,0x20,0x5f,0x32,0x39,0x2e,0x73,0x70,0x65,
    0x63,0x75,0x6c,0x61,0x72,0x43,0x6f,0x6c,0x6f,0x72,0x2e,0x78,0x79,0x7a,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x35,0x20,0x3d,0x20,0x5f,0x32,0x39,0x2e,0x73,0x70,0x65,0x63,
    0x75,0x6c,0x61,0x72,0x43,0x6f,0x6c,0x6f,0x72,0x2e,0x77,0x20,0x2a,0x20,0x31,0x30,
    0x30,0x30,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x6c,0x75,
    0x6d,0x69,0x6e,0x61,0x6e,0x63,0x65,0x20,0x2b,0x3d,0x20,0x28,0x70,0x68,0x6f,0x6e,
    0x67,0x42,0x52,0x44,0x46,0x28,0x70,0x61,0x72,0x61,0x6d,0x2c,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x31,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x2c,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x33,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x2c,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,0x29,0x20,0x2a,0x20,0x5f,0x38,0x34,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,
    0x72,0x6e,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x6c,0x75,0x6d,0x69,0x6e,0x61,
    0x6e,0x63,0x65,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x66,0x72,
    0x61,0x67,0x6d,0x65,0x6e,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,
    0x20,0x6d,0x61,0x69,0x6e,0x30,0x28,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x20,
    0x69,0x6e,0x20,0x5b,0x5b,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x5d,0x5d,0x2c,
    0x20,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,0x74,0x20,0x66,0x73,0x5f,0x70,0x61,0x72,
    0x61,0x6d,0x73,0x26,0x20,0x5f,0x32,0x39,0x20,0x5b,0x5b,0x62,0x75,0x66,0x66,0x65,
    0x72,0x28,0x30,0x29,0x5d,0x5d,0x2c,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x32,
    0x64,0x3c,0x66,0x6c,0x6f,0x61,0x74,0x3e,0x20,0x74,0x65,0x78,0x20,0x5b,0x5b,0x74,
    0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x30,0x29,0x5d,0x5d,0x2c,0x20,0x73,0x61,0x6d,
    0x70,0x6c,0x65,0x72,0x20,0x73,0x6d,0x70,0x20,0x5b,0x5b,0x73,0x61,0x6d,0x70,0x6c,
    0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x6d,
    0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6f,0x75,0x74,0x20,0x3d,0x20,0x7b,
    0x7d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x6c,0x69,
    0x67,0x68,0x74,0x44,0x69,0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x2d,
    0x5f,0x32,0x39,0x2e,0x75,0x5f,0x4c,0x69,0x67,0x68,0x74,0x50,0x6f,0x73,0x2e,0x78,
    0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x5f,
    0x31,0x34,0x36,0x20,0x3d,0x20,0x74,0x65,0x78,0x2e,0x73,0x61,0x6d,0x70,0x6c,0x65,
    0x28,0x73,0x6d,0x70,0x2c,0x20,0x69,0x6e,0x2e,0x75,0x76,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,
    0x20,0x5f,0x32,0x39,0x2e,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x43,0x6f,0x6c,0x6f,
    0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x66,0x72,0x61,0x67,0x5f,
    0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x66,
    0x61,0x73,0x74,0x3a,0x3a,0x63,0x6c,0x61,0x6d,0x70,0x28,0x66,0x6d,0x61,0x28,0x5f,
    0x31,0x34,0x36,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x67,0x65,0x74,0x50,0x68,0x6f,0x6e,
    0x67,0x28,0x70,0x61,0x72,0x61,0x6d,0x2c,0x20,0x6c,0x69,0x67,0x68,0x74,0x44,0x69,
    0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x5f,0x32,0x39,0x2c,0x20,0x69,0x6e,
    0x2e,0x76,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x69,0x6e,0x2e,
    0x76,0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x29,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x33,0x28,0x64,0x6f,0x74,0x28,0x66,0x61,0x73,0x74,0x3a,0x3a,
    0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x69,0x6e,0x2e,0x76,0x5f,0x4e,
    0x6f,0x72,0x6d,0x61,0x6c,0x31,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,
    0x30,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x34,0x34,0x37,0x32,0x31,0x33,0x35,0x39,0x30,
    0x31,0x34,0x35,0x31,0x31,0x31,0x30,0x38,0x33,0x39,0x38,0x34,0x33,0x37,0x35,0x2c,
    0x20,0x30,0x2e,0x38,0x39,0x34,0x34,0x32,0x37,0x31,0x38,0x30,0x32,0x39,0x30,0x32,
    0x32,0x32,0x31,0x36,0x37,0x39,0x36,0x38,0x37,0x35,0x29,0x29,0x20,0x2a,0x20,0x30,
    0x2e,0x31,0x35,0x30,0x30,0x30,0x30,0x30,0x30,0x35,0x39,0x36,0x30,0x34,0x36,0x34,
    0x34,0x37,0x37,0x35,0x33,0x39,0x30,0x36,0x32,0x35,0x29,0x29,0x2c,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x33,0x28,0x30,0x2e,0x30,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x28,0x31,0x2e,0x30,0x29,0x29,0x2c,0x20,0x5f,0x31,0x34,0x36,0x2e,0x77,0x20,
    0x2a,0x20,0x5f,0x32,0x39,0x2e,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x43,0x6f,0x6c,
    0x6f,0x72,0x2e,0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,
    0x6e,0x20,0x6f,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #include <metal_stdlib>
    #include <simd/simd.h>

    using namespace metal;

    struct vs_params
    {
        float4x4 u_MVMatrix;
        float4x4 u_MVPMatrix;
        float4x4 u_NMatrix;
    };

    struct main0_out
    {
        float3 v_Position [[user(locn0)]];
        float3 v_Normal [[user(locn1)]];
        float3 v_Normal1 [[user(locn2)]];
        float2 uv [[user(locn3)]];
        float4 gl_Position [[position]];
    };

    struct main0_in
    {
        float4 a_Position [[attribute(0)]];
        float3 a_Normal [[attribute(1)]];
        float2 a_Texcoord0 [[attribute(2)]];
    };

    vertex main0_out main0(main0_in in [[stage_in]], constant vs_params& _14 [[buffer(0)]])
    {
        main0_out out = {};
        out.v_Position = float3((_14.u_MVMatrix * in.a_Position).xyz);
        float4 _39 = float4(in.a_Normal, 1.0);
        out.v_Normal = float3((_14.u_NMatrix * _39).xyz);
        out.uv = in.a_Texcoord0;
        out.v_Normal1 = fast::normalize(float3((_14.u_MVMatrix * _39).xyz));
        out.gl_Position = _14.u_MVPMatrix * in.a_Position;
        return out;
    }

*/
static const uint8_t vs_source_metal_sim[971] = {
    0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,
    0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,
    0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,
    0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,
    0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x76,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x75,0x5f,0x4d,0x56,0x4d,0x61,0x74,0x72,
    0x69,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,
    0x20,0x75,0x5f,0x4d,0x56,0x50,0x4d,0x61,0x74,0x72,0x69,0x78,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x75,0x5f,0x4e,0x4d,0x61,
    0x74,0x72,0x69,0x78,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,
    0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x30,0x29,
    0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,
    0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,
    0x6f,0x63,0x6e,0x31,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x33,0x20,0x76,0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x31,0x20,0x5b,0x5b,
    0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x32,0x29,0x5d,0x5d,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x75,0x76,0x20,0x5b,0x5b,0x75,
    0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x33,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x20,0x5b,0x5b,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x5d,
    0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,
    0x69,0x6e,0x30,0x5f,0x69,0x6e,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x20,0x61,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x5b,
    0x5b,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x28,0x30,0x29,0x5d,0x5d,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x61,0x5f,0x4e,0x6f,
    0x72,0x6d,0x61,0x6c,0x20,0x5b,0x5b,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,
    0x28,0x31,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x32,0x20,0x61,0x5f,0x54,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x30,0x20,0x5b,0x5b,
    0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x28,0x32,0x29,0x5d,0x5d,0x3b,0x0a,
    0x7d,0x3b,0x0a,0x0a,0x76,0x65,0x72,0x74,0x65,0x78,0x20,0x6d,0x61,0x69,0x6e,0x30,
    0x5f,0x6f,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x28,0x6d,0x61,0x69,0x6e,0x30,
    0x5f,0x69,0x6e,0x20,0x69,0x6e,0x20,0x5b,0x5b,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,
    0x6e,0x5d,0x5d,0x2c,0x20,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,0x74,0x20,0x76,0x73,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x26,0x20,0x5f,0x31,0x34,0x20,0x5b,0x5b,0x62,
    0x75,0x66,0x66,0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,0x29,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6f,0x75,0x74,0x20,
    0x3d,0x20,0x7b,0x7d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x76,0x5f,
    0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x28,0x28,0x5f,0x31,0x34,0x2e,0x75,0x5f,0x4d,0x56,0x4d,0x61,0x74,0x72,0x69,
    0x78,0x20,0x2a,0x20,0x69,0x6e,0x2e,0x61,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,
    0x6e,0x29,0x2e,0x78,0x79,0x7a,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x20,0x5f,0x33,0x39,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x28,0x69,0x6e,0x2e,0x61,0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x31,0x2e,
    0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x76,0x5f,0x4e,0x6f,
    0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x28,0x5f,
    0x31,0x34,0x2e,0x75,0x5f,0x4e,0x4d,0x61,0x74,0x72,0x69,0x78,0x20,0x2a,0x20,0x5f,
    0x33,0x39,0x29,0x2e,0x78,0x79,0x7a,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,
    0x74,0x2e,0x75,0x76,0x20,0x3d,0x20,0x69,0x6e,0x2e,0x61,0x5f,0x54,0x65,0x78,0x63,
    0x6f,0x6f,0x72,0x64,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x76,
    0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x31,0x20,0x3d,0x20,0x66,0x61,0x73,0x74,0x3a,
    0x3a,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x28,0x28,0x5f,0x31,0x34,0x2e,0x75,0x5f,0x4d,0x56,0x4d,0x61,0x74,0x72,0x69,
    0x78,0x20,0x2a,0x20,0x5f,0x33,0x39,0x29,0x2e,0x78,0x79,0x7a,0x29,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x20,0x3d,0x20,0x5f,0x31,0x34,0x2e,0x75,0x5f,0x4d,0x56,0x50,0x4d,
    0x61,0x74,0x72,0x69,0x78,0x20,0x2a,0x20,0x69,0x6e,0x2e,0x61,0x5f,0x50,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,
    0x6e,0x20,0x6f,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #pragma clang diagnostic ignored "-Wmissing-prototypes"

    #include <metal_stdlib>
    #include <simd/simd.h>

    using namespace metal;

    struct fs_params
    {
        float4 u_LightPos;
        float4 ambientColor;
        float4 diffuseColor;
        float4 specularColor;
    };

    struct main0_out
    {
        float4 frag_color [[color(0)]];
    };

    struct main0_in
    {
        float3 v_Position [[user(locn0)]];
        float3 v_Normal [[user(locn1)]];
        float3 v_Normal1 [[user(locn2)]];
        float2 uv [[user(locn3)]];
    };

    static inline __attribute__((always_inline))
    float3 phongBRDF(thread const float3& lightDir, thread const float3& viewDir, thread const float3& normal, thread const float3& phongDiffuseCol, thread const float3& phongSpecularCol, thread const float& phongShininess)
    {
        return phongDiffuseCol + (phongSpecularCol * pow(fast::max(dot(reflect(-lightDir, normal), viewDir), 0.0), phongShininess));
    }

    static inline __attribute__((always_inline))
    float4 getPhong(thread const float4& diffuseColor, thread float3& lightDirection, constant fs_params& _29, thread float3& v_Position, thread float3& v_Normal)
    {
        float3 _63 = fast::normalize(-lightDirection);
        float3 _73 = fast::normalize(v_Normal);
        float3 luminance = _29.ambientColor.xyz * 0.5;
        float _84 = dot(_63, _73);
        if (_84 > 0.0)
        {
            float3 param = _63;
            float3 param_1 = fast::normalize(-v_Position);
            float3 param_2 = _73;
            float3 param_3 = diffuseColor.xyz;
            float3 param_4 = _29.specularColor.xyz;
            float param_5 = _29.specularColor.w * 1000.0;
            luminance += (phongBRDF(param, param_1, param_2, param_3, param_4, param_5) * _84);
        }
        return float4(luminance, 1.0);
    }

    fragment main0_out main0(main0_in in [[stage_in]], constant fs_params& _29 [[buffer(0)]], texture2d<float> tex [[texture(0)]], sampler smp [[sampler(0)]])
    {
        main0_out out = {};
        float3 lightDirection = -_29.u_LightPos.xyz;
        float4 _146 = tex.sample(smp, in.uv);
        float4 param = _29.diffuseColor;
        out.frag_color = float4(fast::clamp(fma(_146.xyz, getPhong(param, lightDirection, _29, in.v_Position, in.v_Normal).xyz, float3(dot(fast::normalize(in.v_Normal1), float3(0.0, 0.447213590145111083984375, 0.89442718029022216796875)) * 0.1500000059604644775390625)), float3(0.0), float3(1.0)), _146.w * _29.diffuseColor.w);
        return out;
    }

*/
static const uint8_t fs_source_metal_sim[2331] = {
    0x23,0x70,0x72,0x61,0x67,0x6d,0x61,0x20,0x63,0x6c,0x61,0x6e,0x67,0x20,0x64,0x69,
    0x61,0x67,0x6e,0x6f,0x73,0x74,0x69,0x63,0x20,0x69,0x67,0x6e,0x6f,0x72,0x65,0x64,
    0x20,0x22,0x2d,0x57,0x6d,0x69,0x73,0x73,0x69,0x6e,0x67,0x2d,0x70,0x72,0x6f,0x74,
    0x6f,0x74,0x79,0x70,0x65,0x73,0x22,0x0a,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,
    0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,
    0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,
    0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,
    0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,
    0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x75,
    0x5f,0x4c,0x69,0x67,0x68,0x74,0x50,0x6f,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x20,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x43,0x6f,0x6c,
    0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x64,
    0x69,0x66,0x66,0x75,0x73,0x65,0x43,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,
    0x43,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,
    0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,
    0x6c,0x6f,0x72,0x20,0x5b,0x5b,0x63,0x6f,0x6c,0x6f,0x72,0x28,0x30,0x29,0x5d,0x5d,
    0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,
    0x6e,0x30,0x5f,0x69,0x6e,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x33,0x20,0x76,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x5b,0x5b,
    0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x5f,0x4e,0x6f,0x72,0x6d,
    0x61,0x6c,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x31,0x29,
    0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,
    0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x31,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,
    0x6c,0x6f,0x63,0x6e,0x32,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x32,0x20,0x75,0x76,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,
    0x6f,0x63,0x6e,0x33,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x61,
    0x74,0x69,0x63,0x20,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x20,0x5f,0x5f,0x61,0x74,0x74,
    0x72,0x69,0x62,0x75,0x74,0x65,0x5f,0x5f,0x28,0x28,0x61,0x6c,0x77,0x61,0x79,0x73,
    0x5f,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x29,0x29,0x0a,0x66,0x6c,0x6f,0x61,0x74,0x33,
    0x20,0x70,0x68,0x6f,0x6e,0x67,0x42,0x52,0x44,0x46,0x28,0x74,0x68,0x72,0x65,0x61,
    0x64,0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,
    0x6c,0x69,0x67,0x68,0x74,0x44,0x69,0x72,0x2c,0x20,0x74,0x68,0x72,0x65,0x61,0x64,
    0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,0x76,
    0x69,0x65,0x77,0x44,0x69,0x72,0x2c,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,
    0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,0x6e,0x6f,0x72,
    0x6d,0x61,0x6c,0x2c,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,0x6f,0x6e,0x73,
    0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,0x70,0x68,0x6f,0x6e,0x67,0x44,
    0x69,0x66,0x66,0x75,0x73,0x65,0x43,0x6f,0x6c,0x2c,0x20,0x74,0x68,0x72,0x65,0x61,
    0x64,0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,
    0x70,0x68,0x6f,0x6e,0x67,0x53,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x43,0x6f,0x6c,
    0x2c,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x26,0x20,0x70,0x68,0x6f,0x6e,0x67,0x53,0x68,0x69,0x6e,0x69,
    0x6e,0x65,0x73,0x73,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,
    0x72,0x6e,0x20,0x70,0x68,0x6f,0x6e,0x67,0x44,0x69,0x66,0x66,0x75,0x73,0x65,0x43,
    0x6f,0x6c,0x20,0x2b,0x20,0x28,0x70,0x68,0x6f,0x6e,0x67,0x53,0x70,0x65,0x63,0x75,
    0x6c,0x61,0x72,0x43,0x6f,0x6c,0x20,0x2a,0x20,0x70,0x6f,0x77,0x28,0x66,0x61,0x73,
    0x74,0x3a,0x3a,0x6d,0x61,0x78,0x28,0x64,0x6f,0x74,0x28,0x72,0x65,0x66,0x6c,0x65,
    0x63,0x74,0x28,0x2d,0x6c,0x69,0x67,0x68,0x74,0x44,0x69,0x72,0x2c,0x20,0x6e,0x6f,
    0x72,0x6d,0x61,0x6c,0x29,0x2c,0x20,0x76,0x69,0x65,0x77,0x44,0x69,0x72,0x29,0x2c,
    0x20,0x30,0x2e,0x30,0x29,0x2c,0x20,0x70,0x68,0x6f,0x6e,0x67,0x53,0x68,0x69,0x6e,
    0x69,0x6e,0x65,0x73,0x73,0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x73,0x74,0x61,0x74,
    0x69,0x63,0x20,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x20,0x5f,0x5f,0x61,0x74,0x74,0x72,
    0x69,0x62,0x75,0x74,0x65,0x5f,0x5f,0x28,0x28,0x61,0x6c,0x77,0x61,0x79,0x73,0x5f,
    0x69,0x6e,0x6c,0x69,0x6e,0x65,0x29,0x29,0x0a,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,
    0x67,0x65,0x74,0x50,0x68,0x6f,0x6e,0x67,0x28,0x74,0x68,0x72,0x65,0x61,0x64,0x20,
    0x63,0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x26,0x20,0x64,0x69,
    0x66,0x66,0x75,0x73,0x65,0x43,0x6f,0x6c,0x6f,0x72,0x2c,0x20,0x74,0x68,0x72,0x65,
    0x61,0x64,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,0x6c,0x69,0x67,0x68,0x74,
    0x44,0x69,0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x63,0x6f,0x6e,0x73,0x74,
    0x61,0x6e,0x74,0x20,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x26,0x20,0x5f,
    0x32,0x39,0x2c,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x26,0x20,0x76,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x74,
    0x68,0x72,0x65,0x61,0x64,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,0x76,0x5f,
    0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x33,0x20,0x5f,0x36,0x33,0x20,0x3d,0x20,0x66,0x61,0x73,0x74,0x3a,
    0x3a,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x2d,0x6c,0x69,0x67,0x68,
    0x74,0x44,0x69,0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x37,0x33,0x20,0x3d,0x20,0x66,0x61,
    0x73,0x74,0x3a,0x3a,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x76,0x5f,
    0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x33,0x20,0x6c,0x75,0x6d,0x69,0x6e,0x61,0x6e,0x63,0x65,0x20,0x3d,0x20,
    0x5f,0x32,0x39,0x2e,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x43,0x6f,0x6c,0x6f,0x72,
    0x2e,0x78,0x79,0x7a,0x20,0x2a,0x20,0x30,0x2e,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x38,0x34,0x20,0x3d,0x20,0x64,0x6f,0x74,0x28,
    0x5f,0x36,0x33,0x2c,0x20,0x5f,0x37,0x33,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,
    0x66,0x20,0x28,0x5f,0x38,0x34,0x20,0x3e,0x20,0x30,0x2e,0x30,0x29,0x0a,0x20,0x20,
    0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x5f,0x36,0x33,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x66,0x61,0x73,0x74,0x3a,0x3a,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x2d,0x76,0x5f,0x50,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,
    0x5f,0x37,0x33,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,0x64,0x69,
    0x66,0x66,0x75,0x73,0x65,0x43,0x6f,0x6c,0x6f,0x72,0x2e,0x78,0x79,0x7a,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x34,0x20,0x3d,0x20,0x5f,0x32,0x39,0x2e,0x73,0x70,0x65,
    0x63,0x75,0x6c,0x61,0x72,0x43,0x6f,0x6c,0x6f,0x72,0x2e,0x78,0x79,0x7a,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x35,0x20,0x3d,0x20,0x5f,0x32,0x39,0x2e,0x73,0x70,0x65,0x63,
    0x75,0x6c,0x61,0x72,0x43,0x6f,0x6c,0x6f,0x72,0x2e,0x77,0x20,0x2a,0x20,0x31,0x30,
    0x30,0x30,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x6c,0x75,
    0x6d,0x69,0x6e,0x61,0x6e,0x63,0x65,0x20,0x2b,0x3d,0x20,0x28,0x70,0x68,0x6f,0x6e,
    0x67,0x42,0x52,0x44,0x46,0x28,0x70,0x61,0x72,0x61,0x6d,0x2c,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x31,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x2c,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x33,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x2c,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,0x29,0x20,0x2a,0x20,0x5f,0x38,0x34,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,
    0x72,0x6e,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x6c,0x75,0x6d,0x69,0x6e,0x61,
    0x6e,0x63,0x65,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x66,0x72,
    0x61,0x67,0x6d,0x65,0x6e,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,
    0x20,0x6d,0x61,0x69,0x6e,0x30,0x28,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x20,
    0x69,0x6e,0x20,0x5b,0x5b,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x5d,0x5d,0x2c,
    0x20,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,0x74,0x20,0x66,0x73,0x5f,0x70,0x61,0x72,
    0x61,0x6d,0x73,0x26,0x20,0x5f,0x32,0x39,0x20,0x5b,0x5b,0x62,0x75,0x66,0x66,0x65,
    0x72,0x28,0x30,0x29,0x5d,0x5d,0x2c,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x32,
    0x64,0x3c,0x66,0x6c,0x6f,0x61,0x74,0x3e,0x20,0x74,0x65,0x78,0x20,0x5b,0x5b,0x74,
    0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x30,0x29,0x5d,0x5d,0x2c,0x20,0x73,0x61,0x6d,
    0x70,0x6c,0x65,0x72,0x20,0x73,0x6d,0x70,0x20,0x5b,0x5b,0x73,0x61,0x6d,0x70,0x6c,
    0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x6d,
    0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6f,0x75,0x74,0x20,0x3d,0x20,0x7b,
    0x7d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x6c,0x69,
    0x67,0x68,0x74,0x44,0x69,0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x2d,
    0x5f,0x32,0x39,0x2e,0x75,0x5f,0x4c,0x69,0x67,0x68,0x74,0x50,0x6f,0x73,0x2e,0x78,
    0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x5f,
    0x31,0x34,0x36,0x20,0x3d,0x20,0x74,0x65,0x78,0x2e,0x73,0x61,0x6d,0x70,0x6c,0x65,
    0x28,0x73,0x6d,0x70,0x2c,0x20,0x69,0x6e,0x2e,0x75,0x76,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,
    0x20,0x5f,0x32,0x39,0x2e,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x43,0x6f,0x6c,0x6f,
    0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x66,0x72,0x61,0x67,0x5f,
    0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x66,
    0x61,0x73,0x74,0x3a,0x3a,0x63,0x6c,0x61,0x6d,0x70,0x28,0x66,0x6d,0x61,0x28,0x5f,
    0x31,0x34,0x36,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x67,0x65,0x74,0x50,0x68,0x6f,0x6e,
    0x67,0x28,0x70,0x61,0x72,0x61,0x6d,0x2c,0x20,0x6c,0x69,0x67,0x68,0x74,0x44,0x69,
    0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x5f,0x32,0x39,0x2c,0x20,0x69,0x6e,
    0x2e,0x76,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x69,0x6e,0x2e,
    0x76,0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x29,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x33,0x28,0x64,0x6f,0x74,0x28,0x66,0x61,0x73,0x74,0x3a,0x3a,
    0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x69,0x6e,0x2e,0x76,0x5f,0x4e,
    0x6f,0x72,0x6d,0x61,0x6c,0x31,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,
    0x30,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x34,0x34,0x37,0x32,0x31,0x33,0x35,0x39,0x30,
    0x31,0x34,0x35,0x31,0x31,0x31,0x30,0x38,0x33,0x39,0x38,0x34,0x33,0x37,0x35,0x2c,
    0x20,0x30,0x2e,0x38,0x39,0x34,0x34,0x32,0x37,0x31,0x38,0x30,0x32,0x39,0x30,0x32,
    0x32,0x32,0x31,0x36,0x37,0x39,0x36,0x38,0x37,0x35,0x29,0x29,0x20,0x2a,0x20,0x30,
    0x2e,0x31,0x35,0x30,0x30,0x30,0x30,0x30,0x30,0x35,0x39,0x36,0x30,0x34,0x36,0x34,
    0x34,0x37,0x37,0x35,0x33,0x39,0x30,0x36,0x32,0x35,0x29,0x29,0x2c,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x33,0x28,0x30,0x2e,0x30,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x28,0x31,0x2e,0x30,0x29,0x29,0x2c,0x20,0x5f,0x31,0x34,0x36,0x2e,0x77,0x20,
    0x2a,0x20,0x5f,0x32,0x39,0x2e,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x43,0x6f,0x6c,
    0x6f,0x72,0x2e,0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,
    0x6e,0x20,0x6f,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    diagnostic(off, derivative_uniformity);

    struct vs_params {
      /_ @offset(0) _/
      u_MVMatrix : mat4x4f,
      /_ @offset(64) _/
      u_MVPMatrix : mat4x4f,
      /_ @offset(128) _/
      u_NMatrix : mat4x4f,
    }

    var<private> v_Position : vec3f;

    @group(0) @binding(0) var<uniform> x_14 : vs_params;

    var<private> a_Position : vec4f;

    var<private> v_Normal : vec3f;

    var<private> a_Normal : vec3f;

    var<private> uv : vec2f;

    var<private> a_Texcoord0 : vec2f;

    var<private> v_Normal1 : vec3f;

    var<private> gl_Position : vec4f;

    fn main_1() {
      let x_19 : mat4x4f = x_14.u_MVMatrix;
      let x_22 : vec4f = a_Position;
      let x_23 : vec4f = (x_19 * x_22);
      v_Position = vec3f(x_23.x, x_23.y, x_23.z);
      let x_31 : mat4x4f = x_14.u_NMatrix;
      let x_34 : vec3f = a_Normal;
      let x_40 : vec4f = (x_31 * vec4f(x_34.x, x_34.y, x_34.z, 1.0f));
      v_Normal = vec3f(x_40.x, x_40.y, x_40.z);
      let x_50 : vec2f = a_Texcoord0;
      uv = x_50;
      let x_53 : mat4x4f = x_14.u_MVMatrix;
      let x_54 : vec3f = a_Normal;
      let x_59 : vec4f = (x_53 * vec4f(x_54.x, x_54.y, x_54.z, 1.0f));
      v_Normal1 = normalize(vec3f(x_59.x, x_59.y, x_59.z));
      let x_73 : mat4x4f = x_14.u_MVPMatrix;
      let x_74 : vec4f = a_Position;
      gl_Position = (x_73 * x_74);
      return;
    }

    struct main_out {
      @location(0)
      v_Position_1 : vec3f,
      @location(1)
      v_Normal_1 : vec3f,
      @location(3)
      uv_1 : vec2f,
      @location(2)
      v_Normal1_1 : vec3f,
      @builtin(position)
      gl_Position : vec4f,
    }

    @vertex
    fn main(@location(0) a_Position_param : vec4f, @location(1) a_Normal_param : vec3f, @location(2) a_Texcoord0_param : vec2f) -> main_out {
      a_Position = a_Position_param;
      a_Normal = a_Normal_param;
      a_Texcoord0 = a_Texcoord0_param;
      main_1();
      return main_out(v_Position, v_Normal, uv, v_Normal1, gl_Position);
    }

*/
static const uint8_t vs_source_wgsl[1757] = {
    0x64,0x69,0x61,0x67,0x6e,0x6f,0x73,0x74,0x69,0x63,0x28,0x6f,0x66,0x66,0x2c,0x20,
    0x64,0x65,0x72,0x69,0x76,0x61,0x74,0x69,0x76,0x65,0x5f,0x75,0x6e,0x69,0x66,0x6f,
    0x72,0x6d,0x69,0x74,0x79,0x29,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,
    0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x20,0x7b,0x0a,0x20,0x20,0x2f,0x2a,
    0x20,0x40,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x30,0x29,0x20,0x2a,0x2f,0x0a,0x20,
    0x20,0x75,0x5f,0x4d,0x56,0x4d,0x61,0x74,0x72,0x69,0x78,0x20,0x3a,0x20,0x6d,0x61,
    0x74,0x34,0x78,0x34,0x66,0x2c,0x0a,0x20,0x20,0x2f,0x2a,0x20,0x40,0x6f,0x66,0x66,
    0x73,0x65,0x74,0x28,0x36,0x34,0x29,0x20,0x2a,0x2f,0x0a,0x20,0x20,0x75,0x5f,0x4d,
    0x56,0x50,0x4d,0x61,0x74,0x72,0x69,0x78,0x20,0x3a,0x20,0x6d,0x61,0x74,0x34,0x78,
    0x34,0x66,0x2c,0x0a,0x20,0x20,0x2f,0x2a,0x20,0x40,0x6f,0x66,0x66,0x73,0x65,0x74,
    0x28,0x31,0x32,0x38,0x29,0x20,0x2a,0x2f,0x0a,0x20,0x20,0x75,0x5f,0x4e,0x4d,0x61,
    0x74,0x72,0x69,0x78,0x20,0x3a,0x20,0x6d,0x61,0x74,0x34,0x78,0x34,0x66,0x2c,0x0a,
    0x7d,0x0a,0x0a,0x76,0x61,0x72,0x3c,0x70,0x72,0x69,0x76,0x61,0x74,0x65,0x3e,0x20,
    0x76,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3a,0x20,0x76,0x65,0x63,
    0x33,0x66,0x3b,0x0a,0x0a,0x40,0x67,0x72,0x6f,0x75,0x70,0x28,0x30,0x29,0x20,0x40,
    0x62,0x69,0x6e,0x64,0x69,0x6e,0x67,0x28,0x30,0x29,0x20,0x76,0x61,0x72,0x3c,0x75,
    0x6e,0x69,0x66,0x6f,0x72,0x6d,0x3e,0x20,0x78,0x5f,0x31,0x34,0x20,0x3a,0x20,0x76,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x3b,0x0a,0x0a,0x76,0x61,0x72,0x3c,0x70,
    0x72,0x69,0x76,0x61,0x74,0x65,0x3e,0x20,0x61,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x3b,0x0a,0x0a,0x76,0x61,0x72,
    0x3c,0x70,0x72,0x69,0x76,0x61,0x74,0x65,0x3e,0x20,0x76,0x5f,0x4e,0x6f,0x72,0x6d,
    0x61,0x6c,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x3b,0x0a,0x0a,0x76,0x61,0x72,
    0x3c,0x70,0x72,0x69,0x76,0x61,0x74,0x65,0x3e,0x20,0x61,0x5f,0x4e,0x6f,0x72,0x6d,
    0x61,0x6c,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x3b,0x0a,0x0a,0x76,0x61,0x72,
    0x3c,0x70,0x72,0x69,0x76,0x61,0x74,0x65,0x3e,0x20,0x75,0x76,0x20,0x3a,0x20,0x76,
    0x65,0x63,0x32,0x66,0x3b,0x0a,0x0a,0x76,0x61,0x72,0x3c,0x70,0x72,0x69,0x76,0x61,
    0x74,0x65,0x3e,0x20,0x61,0x5f,0x54,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x30,0x20,
    0x3a,0x20,0x76,0x65,0x63,0x32,0x66,0x3b,0x0a,0x0a,0x76,0x61,0x72,0x3c,0x70,0x72,
    0x69,0x76,0x61,0x74,0x65,0x3e,0x20,0x76,0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x31,
    0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x3b,0x0a,0x0a,0x76,0x61,0x72,0x3c,0x70,
    0x72,0x69,0x76,0x61,0x74,0x65,0x3e,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x3b,0x0a,0x0a,0x66,0x6e,
    0x20,0x6d,0x61,0x69,0x6e,0x5f,0x31,0x28,0x29,0x20,0x7b,0x0a,0x20,0x20,0x6c,0x65,
    0x74,0x20,0x78,0x5f,0x31,0x39,0x20,0x3a,0x20,0x6d,0x61,0x74,0x34,0x78,0x34,0x66,
    0x20,0x3d,0x20,0x78,0x5f,0x31,0x34,0x2e,0x75,0x5f,0x4d,0x56,0x4d,0x61,0x74,0x72,
    0x69,0x78,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x32,0x32,0x20,0x3a,
    0x20,0x76,0x65,0x63,0x34,0x66,0x20,0x3d,0x20,0x61,0x5f,0x50,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x32,0x33,0x20,
    0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x20,0x3d,0x20,0x28,0x78,0x5f,0x31,0x39,0x20,
    0x2a,0x20,0x78,0x5f,0x32,0x32,0x29,0x3b,0x0a,0x20,0x20,0x76,0x5f,0x50,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x66,0x28,0x78,0x5f,
    0x32,0x33,0x2e,0x78,0x2c,0x20,0x78,0x5f,0x32,0x33,0x2e,0x79,0x2c,0x20,0x78,0x5f,
    0x32,0x33,0x2e,0x7a,0x29,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x33,
    0x31,0x20,0x3a,0x20,0x6d,0x61,0x74,0x34,0x78,0x34,0x66,0x20,0x3d,0x20,0x78,0x5f,
    0x31,0x34,0x2e,0x75,0x5f,0x4e,0x4d,0x61,0x74,0x72,0x69,0x78,0x3b,0x0a,0x20,0x20,
    0x6c,0x65,0x74,0x20,0x78,0x5f,0x33,0x34,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,
    0x20,0x3d,0x20,0x61,0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x20,0x20,0x6c,
    0x65,0x74,0x20,0x78,0x5f,0x34,0x30,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x20,
    0x3d,0x20,0x28,0x78,0x5f,0x33,0x31,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x66,0x28,
    0x78,0x5f,0x33,0x34,0x2e,0x78,0x2c,0x20,0x78,0x5f,0x33,0x34,0x2e,0x79,0x2c,0x20,
    0x78,0x5f,0x33,0x34,0x2e,0x7a,0x2c,0x20,0x31,0x2e,0x30,0x66,0x29,0x29,0x3b,0x0a,
    0x20,0x20,0x76,0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x76,0x65,0x63,
    0x33,0x66,0x28,0x78,0x5f,0x34,0x30,0x2e,0x78,0x2c,0x20,0x78,0x5f,0x34,0x30,0x2e,
    0x79,0x2c,0x20,0x78,0x5f,0x34,0x30,0x2e,0x7a,0x29,0x3b,0x0a,0x20,0x20,0x6c,0x65,
    0x74,0x20,0x78,0x5f,0x35,0x30,0x20,0x3a,0x20,0x76,0x65,0x63,0x32,0x66,0x20,0x3d,
    0x20,0x61,0x5f,0x54,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x30,0x3b,0x0a,0x20,0x20,
    0x75,0x76,0x20,0x3d,0x20,0x78,0x5f,0x35,0x30,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,
    0x20,0x78,0x5f,0x35,0x33,0x20,0x3a,0x20,0x6d,0x61,0x74,0x34,0x78,0x34,0x66,0x20,
    0x3d,0x20,0x78,0x5f,0x31,0x34,0x2e,0x75,0x5f,0x4d,0x56,0x4d,0x61,0x74,0x72,0x69,
    0x78,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x35,0x34,0x20,0x3a,0x20,
    0x76,0x65,0x63,0x33,0x66,0x20,0x3d,0x20,0x61,0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,
    0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x35,0x39,0x20,0x3a,0x20,0x76,
    0x65,0x63,0x34,0x66,0x20,0x3d,0x20,0x28,0x78,0x5f,0x35,0x33,0x20,0x2a,0x20,0x76,
    0x65,0x63,0x34,0x66,0x28,0x78,0x5f,0x35,0x34,0x2e,0x78,0x2c,0x20,0x78,0x5f,0x35,
    0x34,0x2e,0x79,0x2c,0x20,0x78,0x5f,0x35,0x34,0x2e,0x7a,0x2c,0x20,0x31,0x2e,0x30,
    0x66,0x29,0x29,0x3b,0x0a,0x20,0x20,0x76,0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x31,
    0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x76,0x65,0x63,
    0x33,0x66,0x28,0x78,0x5f,0x35,0x39,0x2e,0x78,0x2c,0x20,0x78,0x5f,0x35,0x39,0x2e,
    0x79,0x2c,0x20,0x78,0x5f,0x35,0x39,0x2e,0x7a,0x29,0x29,0x3b,0x0a,0x20,0x20,0x6c,
    0x65,0x74,0x20,0x78,0x5f,0x37,0x33,0x20,0x3a,0x20,0x6d,0x61,0x74,0x34,0x78,0x34,
    0x66,0x20,0x3d,0x20,0x78,0x5f,0x31,0x34,0x2e,0x75,0x5f,0x4d,0x56,0x50,0x4d,0x61,
    0x74,0x72,0x69,0x78,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x37,0x34,
    0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x20,0x3d,0x20,0x61,0x5f,0x50,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x28,0x78,0x5f,0x37,0x33,0x20,0x2a,0x20,0x78,
    0x5f,0x37,0x34,0x29,0x3b,0x0a,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x3b,0x0a,
    0x7d,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x6f,
    0x75,0x74,0x20,0x7b,0x0a,0x20,0x20,0x40,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,
    0x28,0x30,0x29,0x0a,0x20,0x20,0x76,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x5f,0x31,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x2c,0x0a,0x20,0x20,0x40,0x6c,
    0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x28,0x31,0x29,0x0a,0x20,0x20,0x76,0x5f,0x4e,
    0x6f,0x72,0x6d,0x61,0x6c,0x5f,0x31,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x2c,
    0x0a,0x20,0x20,0x40,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x28,0x33,0x29,0x0a,
    0x20,0x20,0x75,0x76,0x5f,0x31,0x20,0x3a,0x20,0x76,0x65,0x63,0x32,0x66,0x2c,0x0a,
    0x20,0x20,0x40,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x28,0x32,0x29,0x0a,0x20,
    0x20,0x76,0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x31,0x5f,0x31,0x20,0x3a,0x20,0x76,
    0x65,0x63,0x33,0x66,0x2c,0x0a,0x20,0x20,0x40,0x62,0x75,0x69,0x6c,0x74,0x69,0x6e,
    0x28,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x29,0x0a,0x20,0x20,0x67,0x6c,0x5f,
    0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,
    0x2c,0x0a,0x7d,0x0a,0x0a,0x40,0x76,0x65,0x72,0x74,0x65,0x78,0x0a,0x66,0x6e,0x20,
    0x6d,0x61,0x69,0x6e,0x28,0x40,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x28,0x30,
    0x29,0x20,0x61,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x5f,0x70,0x61,0x72,
    0x61,0x6d,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x2c,0x20,0x40,0x6c,0x6f,0x63,
    0x61,0x74,0x69,0x6f,0x6e,0x28,0x31,0x29,0x20,0x61,0x5f,0x4e,0x6f,0x72,0x6d,0x61,
    0x6c,0x5f,0x70,0x61,0x72,0x61,0x6d,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x2c,
    0x20,0x40,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x28,0x32,0x29,0x20,0x61,0x5f,
    0x54,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x30,0x5f,0x70,0x61,0x72,0x61,0x6d,0x20,
    0x3a,0x20,0x76,0x65,0x63,0x32,0x66,0x29,0x20,0x2d,0x3e,0x20,0x6d,0x61,0x69,0x6e,
    0x5f,0x6f,0x75,0x74,0x20,0x7b,0x0a,0x20,0x20,0x61,0x5f,0x50,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x20,0x3d,0x20,0x61,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x3b,0x0a,0x20,0x20,0x61,0x5f,0x4e,0x6f,0x72,0x6d,
    0x61,0x6c,0x20,0x3d,0x20,0x61,0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x3b,0x0a,0x20,0x20,0x61,0x5f,0x54,0x65,0x78,0x63,0x6f,0x6f,0x72,
    0x64,0x30,0x20,0x3d,0x20,0x61,0x5f,0x54,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x30,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x3b,0x0a,0x20,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x31,
    0x28,0x29,0x3b,0x0a,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6d,0x61,0x69,
    0x6e,0x5f,0x6f,0x75,0x74,0x28,0x76,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x2c,0x20,0x76,0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x75,0x76,0x2c,0x20,
    0x76,0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x31,0x2c,0x20,0x67,0x6c,0x5f,0x50,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    diagnostic(off, derivative_uniformity);

    struct fs_params {
      /_ @offset(0) _/
      u_LightPos : vec4f,
      /_ @offset(16) _/
      ambientColor : vec4f,
      /_ @offset(32) _/
      diffuseColor : vec4f,
      /_ @offset(48) _/
      specularColor : vec4f,
    }

    var<private> lightDirection : vec3f;

    @group(0) @binding(4) var<uniform> x_29 : fs_params;

    var<private> v_Position : vec3f;

    var<private> v_Normal : vec3f;

    @group(1) @binding(48) var tex : texture_2d<f32>;

    @group(1) @binding(64) var smp : sampler;

    var<private> uv : vec2f;

    var<private> v_Normal1 : vec3f;

    var<private> frag_color : vec4f;

    fn phongBRDF_vf3_vf3_vf3_vf3_vf3_f1_(lightDir : ptr<function, vec3f>, viewDir : ptr<function, vec3f>, normal : ptr<function, vec3f>, phongDiffuseCol : ptr<function, vec3f>, phongSpecularCol : ptr<function, vec3f>, phongShininess : ptr<function, f32>) -> vec3f {
      var color : vec3f;
      var reflectDir : vec3f;
      var specDot : f32;
      let x_38 : vec3f = *(phongDiffuseCol);
      color = x_38;
      let x_40 : vec3f = *(lightDir);
      let x_41 : vec3f = -(x_40);
      let x_42 : vec3f = *(normal);
      reflectDir = reflect(x_41, x_42);
      let x_45 : vec3f = reflectDir;
      let x_46 : vec3f = *(viewDir);
      specDot = max(dot(x_45, x_46), 0.0f);
      let x_50 : f32 = specDot;
      let x_51 : f32 = *(phongShininess);
      let x_53 : vec3f = *(phongSpecularCol);
      let x_55 : vec3f = color;
      color = (x_55 + (x_53 * pow(x_50, x_51)));
      let x_57 : vec3f = color;
      return x_57;
    }

    fn getPhong_vf4_(diffuseColor : ptr<function, vec4f>) -> vec4f {
      var lightDir_1 : vec3f;
      var viewDir_1 : vec3f;
      var n : vec3f;
      var luminance : vec3f;
      var illuminance : f32;
      var brdf : vec3f;
      var param : vec3f;
      var param_1 : vec3f;
      var param_2 : vec3f;
      var param_3 : vec3f;
      var param_4 : vec3f;
      var param_5 : f32;
      var outColor : vec4f;
      let x_61 : vec3f = lightDirection;
      lightDir_1 = normalize(-(x_61));
      let x_67 : vec3f = v_Position;
      viewDir_1 = normalize(-(x_67));
      let x_72 : vec3f = v_Normal;
      n = normalize(x_72);
      let x_77 : vec4f = x_29.ambientColor;
      luminance = (vec3f(x_77.x, x_77.y, x_77.z) * 0.5f);
      let x_82 : vec3f = lightDir_1;
      let x_83 : vec3f = n;
      illuminance = dot(x_82, x_83);
      let x_85 : f32 = illuminance;
      if ((x_85 > 0.0f)) {
        let x_96 : f32 = x_29.specularColor.w;
        let x_100 : vec3f = lightDir_1;
        param = x_100;
        let x_102 : vec3f = viewDir_1;
        param_1 = x_102;
        let x_104 : vec3f = n;
        param_2 = x_104;
        let x_106 : vec4f = *(diffuseColor);
        param_3 = vec3f(x_106.x, x_106.y, x_106.z);
        let x_110 : vec4f = x_29.specularColor;
        param_4 = vec3f(x_110.x, x_110.y, x_110.z);
        param_5 = (x_96 * 1000.0f);
        let x_113 : vec3f = phongBRDF_vf3_vf3_vf3_vf3_vf3_f1_(&(param), &(param_1), &(param_2), &(param_3), &(param_4), &(param_5));
        brdf = x_113;
        let x_114 : vec3f = brdf;
        let x_115 : f32 = illuminance;
        let x_120 : vec3f = luminance;
        luminance = (x_120 + ((x_114 * x_115) * vec3f(1.0f, 1.0f, 1.0f)));
      }
      let x_123 : vec3f = luminance;
      outColor = vec4f(x_123.x, x_123.y, x_123.z, 1.0f);
      let x_128 : vec4f = outColor;
      return x_128;
    }

    fn main_1() {
      var txt : vec4f;
      var directional : f32;
      var param_6 : vec4f;
      let x_34 : vec4f = x_29.u_LightPos;
      lightDirection = -(vec3f(x_34.x, x_34.y, x_34.z));
      let x_145 : vec2f = uv;
      let x_146 : vec4f = textureSample(tex, smp, x_145);
      txt = x_146;
      let x_149 : vec3f = v_Normal1;
      directional = dot(normalize(x_149), vec3f(0.0f, 0.44721359014511108398f, 0.89442718029022216797f));
      let x_155 : f32 = directional;
      directional = (x_155 * 0.15000000596046447754f);
      let x_160 : f32 = directional;
      let x_161 : vec4f = txt;
      let x_166 : vec4f = x_29.diffuseColor;
      param_6 = x_166;
      let x_167 : vec4f = getPhong_vf4_(&(param_6));
      let x_174 : vec3f = clamp((vec3f(x_160, x_160, x_160) + (vec3f(x_161.x, x_161.y, x_161.z) * vec3f(x_167.x, x_167.y, x_167.z))), vec3f(0.0f, 0.0f, 0.0f), vec3f(1.0f, 1.0f, 1.0f));
      let x_176 : f32 = txt.w;
      let x_178 : f32 = x_29.diffuseColor.w;
      frag_color = vec4f(x_174.x, x_174.y, x_174.z, (x_176 * x_178));
      return;
    }

    struct main_out {
      @location(0)
      frag_color_1 : vec4f,
    }

    @fragment
    fn main(@location(0) v_Position_param : vec3f, @location(1) v_Normal_param : vec3f, @location(3) uv_param : vec2f, @location(2) v_Normal1_param : vec3f) -> main_out {
      v_Position = v_Position_param;
      v_Normal = v_Normal_param;
      uv = uv_param;
      v_Normal1 = v_Normal1_param;
      main_1();
      return main_out(frag_color);
    }

*/
static const uint8_t fs_source_wgsl[4478] = {
    0x64,0x69,0x61,0x67,0x6e,0x6f,0x73,0x74,0x69,0x63,0x28,0x6f,0x66,0x66,0x2c,0x20,
    0x64,0x65,0x72,0x69,0x76,0x61,0x74,0x69,0x76,0x65,0x5f,0x75,0x6e,0x69,0x66,0x6f,
    0x72,0x6d,0x69,0x74,0x79,0x29,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,
    0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x20,0x7b,0x0a,0x20,0x20,0x2f,0x2a,
    0x20,0x40,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x30,0x29,0x20,0x2a,0x2f,0x0a,0x20,
    0x20,0x75,0x5f,0x4c,0x69,0x67,0x68,0x74,0x50,0x6f,0x73,0x20,0x3a,0x20,0x76,0x65,
    0x63,0x34,0x66,0x2c,0x0a,0x20,0x20,0x2f,0x2a,0x20,0x40,0x6f,0x66,0x66,0x73,0x65,
    0x74,0x28,0x31,0x36,0x29,0x20,0x2a,0x2f,0x0a,0x20,0x20,0x61,0x6d,0x62,0x69,0x65,
    0x6e,0x74,0x43,0x6f,0x6c,0x6f,0x72,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x2c,
    0x0a,0x20,0x20,0x2f,0x2a,0x20,0x40,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x33,0x32,
    0x29,0x20,0x2a,0x2f,0x0a,0x20,0x20,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x43,0x6f,
    0x6c,0x6f,0x72,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x2c,0x0a,0x20,0x20,0x2f,
    0x2a,0x20,0x40,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x34,0x38,0x29,0x20,0x2a,0x2f,
    0x0a,0x20,0x20,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x43,0x6f,0x6c,0x6f,0x72,
    0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x2c,0x0a,0x7d,0x0a,0x0a,0x76,0x61,0x72,
    0x3c,0x70,0x72,0x69,0x76,0x61,0x74,0x65,0x3e,0x20,0x6c,0x69,0x67,0x68,0x74,0x44,
    0x69,0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,
    0x3b,0x0a,0x0a,0x40,0x67,0x72,0x6f,0x75,0x70,0x28,0x30,0x29,0x20,0x40,0x62,0x69,
    0x6e,0x64,0x69,0x6e,0x67,0x28,0x34,0x29,0x20,0x76,0x61,0x72,0x3c,0x75,0x6e,0x69,
    0x66,0x6f,0x72,0x6d,0x3e,0x20,0x78,0x5f,0x32,0x39,0x20,0x3a,0x20,0x66,0x73,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x3b,0x0a,0x0a,0x76,0x61,0x72,0x3c,0x70,0x72,0x69,
    0x76,0x61,0x74,0x65,0x3e,0x20,0x76,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x3b,0x0a,0x0a,0x76,0x61,0x72,0x3c,0x70,
    0x72,0x69,0x76,0x61,0x74,0x65,0x3e,0x20,0x76,0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,
    0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x3b,0x0a,0x0a,0x40,0x67,0x72,0x6f,0x75,
    0x70,0x28,0x31,0x29,0x20,0x40,0x62,0x69,0x6e,0x64,0x69,0x6e,0x67,0x28,0x34,0x38,
    0x29,0x20,0x76,0x61,0x72,0x20,0x74,0x65,0x78,0x20,0x3a,0x20,0x74,0x65,0x78,0x74,
    0x75,0x72,0x65,0x5f,0x32,0x64,0x3c,0x66,0x33,0x32,0x3e,0x3b,0x0a,0x0a,0x40,0x67,
    0x72,0x6f,0x75,0x70,0x28,0x31,0x29,0x20,0x40,0x62,0x69,0x6e,0x64,0x69,0x6e,0x67,
    0x28,0x36,0x34,0x29,0x20,0x76,0x61,0x72,0x20,0x73,0x6d,0x70,0x20,0x3a,0x20,0x73,
    0x61,0x6d,0x70,0x6c,0x65,0x72,0x3b,0x0a,0x0a,0x76,0x61,0x72,0x3c,0x70,0x72,0x69,
    0x76,0x61,0x74,0x65,0x3e,0x20,0x75,0x76,0x20,0x3a,0x20,0x76,0x65,0x63,0x32,0x66,
    0x3b,0x0a,0x0a,0x76,0x61,0x72,0x3c,0x70,0x72,0x69,0x76,0x61,0x74,0x65,0x3e,0x20,
    0x76,0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x31,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,
    0x66,0x3b,0x0a,0x0a,0x76,0x61,0x72,0x3c,0x70,0x72,0x69,0x76,0x61,0x74,0x65,0x3e,
    0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3a,0x20,0x76,0x65,
    0x63,0x34,0x66,0x3b,0x0a,0x0a,0x66,0x6e,0x20,0x70,0x68,0x6f,0x6e,0x67,0x42,0x52,
    0x44,0x46,0x5f,0x76,0x66,0x33,0x5f,0x76,0x66,0x33,0x5f,0x76,0x66,0x33,0x5f,0x76,
    0x66,0x33,0x5f,0x76,0x66,0x33,0x5f,0x66,0x31,0x5f,0x28,0x6c,0x69,0x67,0x68,0x74,
    0x44,0x69,0x72,0x20,0x3a,0x20,0x70,0x74,0x72,0x3c,0x66,0x75,0x6e,0x63,0x74,0x69,
    0x6f,0x6e,0x2c,0x20,0x76,0x65,0x63,0x33,0x66,0x3e,0x2c,0x20,0x76,0x69,0x65,0x77,
    0x44,0x69,0x72,0x20,0x3a,0x20,0x70,0x74,0x72,0x3c,0x66,0x75,0x6e,0x63,0x74,0x69,
    0x6f,0x6e,0x2c,0x20,0x76,0x65,0x63,0x33,0x66,0x3e,0x2c,0x20,0x6e,0x6f,0x72,0x6d,
    0x61,0x6c,0x20,0x3a,0x20,0x70,0x74,0x72,0x3c,0x66,0x75,0x6e,0x63,0x74,0x69,0x6f,
    0x6e,0x2c,0x20,0x76,0x65,0x63,0x33,0x66,0x3e,0x2c,0x20,0x70,0x68,0x6f,0x6e,0x67,
    0x44,0x69,0x66,0x66,0x75,0x73,0x65,0x43,0x6f,0x6c,0x20,0x3a,0x20,0x70,0x74,0x72,
    0x3c,0x66,0x75,0x6e,0x63,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x76,0x65,0x63,0x33,0x66,
    0x3e,0x2c,0x20,0x70,0x68,0x6f,0x6e,0x67,0x53,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,
    0x43,0x6f,0x6c,0x20,0x3a,0x20,0x70,0x74,0x72,0x3c,0x66,0x75,0x6e,0x63,0x74,0x69,
    0x6f,0x6e,0x2c,0x20,0x76,0x65,0x63,0x33,0x66,0x3e,0x2c,0x20,0x70,0x68,0x6f,0x6e,
    0x67,0x53,0x68,0x69,0x6e,0x69,0x6e,0x65,0x73,0x73,0x20,0x3a,0x20,0x70,0x74,0x72,
    0x3c,0x66,0x75,0x6e,0x63,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x66,0x33,0x32,0x3e,0x29,
    0x20,0x2d,0x3e,0x20,0x76,0x65,0x63,0x33,0x66,0x20,0x7b,0x0a,0x20,0x20,0x76,0x61,
    0x72,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x3b,
    0x0a,0x20,0x20,0x76,0x61,0x72,0x20,0x72,0x65,0x66,0x6c,0x65,0x63,0x74,0x44,0x69,
    0x72,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x3b,0x0a,0x20,0x20,0x76,0x61,0x72,
    0x20,0x73,0x70,0x65,0x63,0x44,0x6f,0x74,0x20,0x3a,0x20,0x66,0x33,0x32,0x3b,0x0a,
    0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x33,0x38,0x20,0x3a,0x20,0x76,0x65,0x63,
    0x33,0x66,0x20,0x3d,0x20,0x2a,0x28,0x70,0x68,0x6f,0x6e,0x67,0x44,0x69,0x66,0x66,
    0x75,0x73,0x65,0x43,0x6f,0x6c,0x29,0x3b,0x0a,0x20,0x20,0x63,0x6f,0x6c,0x6f,0x72,
    0x20,0x3d,0x20,0x78,0x5f,0x33,0x38,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,
    0x5f,0x34,0x30,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x20,0x3d,0x20,0x2a,0x28,
    0x6c,0x69,0x67,0x68,0x74,0x44,0x69,0x72,0x29,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,
    0x20,0x78,0x5f,0x34,0x31,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x20,0x3d,0x20,
    0x2d,0x28,0x78,0x5f,0x34,0x30,0x29,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,
    0x5f,0x34,0x32,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x20,0x3d,0x20,0x2a,0x28,
    0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x29,0x3b,0x0a,0x20,0x20,0x72,0x65,0x66,0x6c,0x65,
    0x63,0x74,0x44,0x69,0x72,0x20,0x3d,0x20,0x72,0x65,0x66,0x6c,0x65,0x63,0x74,0x28,
    0x78,0x5f,0x34,0x31,0x2c,0x20,0x78,0x5f,0x34,0x32,0x29,0x3b,0x0a,0x20,0x20,0x6c,
    0x65,0x74,0x20,0x78,0x5f,0x34,0x35,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x20,
    0x3d,0x20,0x72,0x65,0x66,0x6c,0x65,0x63,0x74,0x44,0x69,0x72,0x3b,0x0a,0x20,0x20,
    0x6c,0x65,0x74,0x20,0x78,0x5f,0x34,0x36,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,
    0x20,0x3d,0x20,0x2a,0x28,0x76,0x69,0x65,0x77,0x44,0x69,0x72,0x29,0x3b,0x0a,0x20,
    0x20,0x73,0x70,0x65,0x63,0x44,0x6f,0x74,0x20,0x3d,0x20,0x6d,0x61,0x78,0x28,0x64,
    0x6f,0x74,0x28,0x78,0x5f,0x34,0x35,0x2c,0x20,0x78,0x5f,0x34,0x36,0x29,0x2c,0x20,
    0x30,0x2e,0x30,0x66,0x29,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x35,
    0x30,0x20,0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,0x20,0x73,0x70,0x65,0x63,0x44,0x6f,
    0x74,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x35,0x31,0x20,0x3a,0x20,
    0x66,0x33,0x32,0x20,0x3d,0x20,0x2a,0x28,0x70,0x68,0x6f,0x6e,0x67,0x53,0x68,0x69,
    0x6e,0x69,0x6e,0x65,0x73,0x73,0x29,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,
    0x5f,0x35,0x33,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x20,0x3d,0x20,0x2a,0x28,
    0x70,0x68,0x6f,0x6e,0x67,0x53,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x43,0x6f,0x6c,
    0x29,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x35,0x35,0x20,0x3a,0x20,
    0x76,0x65,0x63,0x33,0x66,0x20,0x3d,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,
    0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x28,0x78,0x5f,0x35,0x35,0x20,0x2b,
    0x20,0x28,0x78,0x5f,0x35,0x33,0x20,0x2a,0x20,0x70,0x6f,0x77,0x28,0x78,0x5f,0x35,
    0x30,0x2c,0x20,0x78,0x5f,0x35,0x31,0x29,0x29,0x29,0x3b,0x0a,0x20,0x20,0x6c,0x65,
    0x74,0x20,0x78,0x5f,0x35,0x37,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x20,0x3d,
    0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,
    0x20,0x78,0x5f,0x35,0x37,0x3b,0x0a,0x7d,0x0a,0x0a,0x66,0x6e,0x20,0x67,0x65,0x74,
    0x50,0x68,0x6f,0x6e,0x67,0x5f,0x76,0x66,0x34,0x5f,0x28,0x64,0x69,0x66,0x66,0x75,
    0x73,0x65,0x43,0x6f,0x6c,0x6f,0x72,0x20,0x3a,0x20,0x70,0x74,0x72,0x3c,0x66,0x75,
    0x6e,0x63,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x76,0x65,0x63,0x34,0x66,0x3e,0x29,0x20,
    0x2d,0x3e,0x20,0x76,0x65,0x63,0x34,0x66,0x20,0x7b,0x0a,0x20,0x20,0x76,0x61,0x72,
    0x20,0x6c,0x69,0x67,0x68,0x74,0x44,0x69,0x72,0x5f,0x31,0x20,0x3a,0x20,0x76,0x65,
    0x63,0x33,0x66,0x3b,0x0a,0x20,0x20,0x76,0x61,0x72,0x20,0x76,0x69,0x65,0x77,0x44,
    0x69,0x72,0x5f,0x31,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x3b,0x0a,0x20,0x20,
    0x76,0x61,0x72,0x20,0x6e,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x3b,0x0a,0x20,
    0x20,0x76,0x61,0x72,0x20,0x6c,0x75,0x6d,0x69,0x6e,0x61,0x6e,0x63,0x65,0x20,0x3a,
    0x20,0x76,0x65,0x63,0x33,0x66,0x3b,0x0a,0x20,0x20,0x76,0x61,0x72,0x20,0x69,0x6c,
    0x6c,0x75,0x6d,0x69,0x6e,0x61,0x6e,0x63,0x65,0x20,0x3a,0x20,0x66,0x33,0x32,0x3b,
    0x0a,0x20,0x20,0x76,0x61,0x72,0x20,0x62,0x72,0x64,0x66,0x20,0x3a,0x20,0x76,0x65,
    0x63,0x33,0x66,0x3b,0x0a,0x20,0x20,0x76,0x61,0x72,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x3b,0x0a,0x20,0x20,0x76,0x61,0x72,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x3b,
    0x0a,0x20,0x20,0x76,0x61,0x72,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3a,
    0x20,0x76,0x65,0x63,0x33,0x66,0x3b,0x0a,0x20,0x20,0x76,0x61,0x72,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x33,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x3b,0x0a,0x20,
    0x20,0x76,0x61,0x72,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x20,0x3a,0x20,0x76,
    0x65,0x63,0x33,0x66,0x3b,0x0a,0x20,0x20,0x76,0x61,0x72,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x35,0x20,0x3a,0x20,0x66,0x33,0x32,0x3b,0x0a,0x20,0x20,0x76,0x61,0x72,
    0x20,0x6f,0x75,0x74,0x43,0x6f,0x6c,0x6f,0x72,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,
    0x66,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x36,0x31,0x20,0x3a,0x20,
    0x76,0x65,0x63,0x33,0x66,0x20,0x3d,0x20,0x6c,0x69,0x67,0x68,0x74,0x44,0x69,0x72,
    0x65,0x63,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x6c,0x69,0x67,0x68,0x74,0x44,
    0x69,0x72,0x5f,0x31,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,
    0x28,0x2d,0x28,0x78,0x5f,0x36,0x31,0x29,0x29,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,
    0x20,0x78,0x5f,0x36,0x37,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x20,0x3d,0x20,
    0x76,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x76,0x69,
    0x65,0x77,0x44,0x69,0x72,0x5f,0x31,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,
    0x69,0x7a,0x65,0x28,0x2d,0x28,0x78,0x5f,0x36,0x37,0x29,0x29,0x3b,0x0a,0x20,0x20,
    0x6c,0x65,0x74,0x20,0x78,0x5f,0x37,0x32,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,
    0x20,0x3d,0x20,0x76,0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x20,0x20,0x6e,
    0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x78,0x5f,0x37,
    0x32,0x29,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x37,0x37,0x20,0x3a,
    0x20,0x76,0x65,0x63,0x34,0x66,0x20,0x3d,0x20,0x78,0x5f,0x32,0x39,0x2e,0x61,0x6d,
    0x62,0x69,0x65,0x6e,0x74,0x43,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x6c,0x75,
    0x6d,0x69,0x6e,0x61,0x6e,0x63,0x65,0x20,0x3d,0x20,0x28,0x76,0x65,0x63,0x33,0x66,
    0x28,0x78,0x5f,0x37,0x37,0x2e,0x78,0x2c,0x20,0x78,0x5f,0x37,0x37,0x2e,0x79,0x2c,
    0x20,0x78,0x5f,0x37,0x37,0x2e,0x7a,0x29,0x20,0x2a,0x20,0x30,0x2e,0x35,0x66,0x29,
    0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x38,0x32,0x20,0x3a,0x20,0x76,
    0x65,0x63,0x33,0x66,0x20,0x3d,0x20,0x6c,0x69,0x67,0x68,0x74,0x44,0x69,0x72,0x5f,
    0x31,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x38,0x33,0x20,0x3a,0x20,
    0x76,0x65,0x63,0x33,0x66,0x20,0x3d,0x20,0x6e,0x3b,0x0a,0x20,0x20,0x69,0x6c,0x6c,
    0x75,0x6d,0x69,0x6e,0x61,0x6e,0x63,0x65,0x20,0x3d,0x20,0x64,0x6f,0x74,0x28,0x78,
    0x5f,0x38,0x32,0x2c,0x20,0x78,0x5f,0x38,0x33,0x29,0x3b,0x0a,0x20,0x20,0x6c,0x65,
    0x74,0x20,0x78,0x5f,0x38,0x35,0x20,0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,0x20,0x69,
    0x6c,0x6c,0x75,0x6d,0x69,0x6e,0x61,0x6e,0x63,0x65,0x3b,0x0a,0x20,0x20,0x69,0x66,
    0x20,0x28,0x28,0x78,0x5f,0x38,0x35,0x20,0x3e,0x20,0x30,0x2e,0x30,0x66,0x29,0x29,
    0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x39,0x36,0x20,
    0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,0x20,0x78,0x5f,0x32,0x39,0x2e,0x73,0x70,0x65,
    0x63,0x75,0x6c,0x61,0x72,0x43,0x6f,0x6c,0x6f,0x72,0x2e,0x77,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x31,0x30,0x30,0x20,0x3a,0x20,0x76,0x65,
    0x63,0x33,0x66,0x20,0x3d,0x20,0x6c,0x69,0x67,0x68,0x74,0x44,0x69,0x72,0x5f,0x31,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x78,0x5f,
    0x31,0x30,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x31,
    0x30,0x32,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x20,0x3d,0x20,0x76,0x69,0x65,
    0x77,0x44,0x69,0x72,0x5f,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x31,0x20,0x3d,0x20,0x78,0x5f,0x31,0x30,0x32,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x31,0x30,0x34,0x20,0x3a,0x20,0x76,0x65,0x63,
    0x33,0x66,0x20,0x3d,0x20,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x32,0x20,0x3d,0x20,0x78,0x5f,0x31,0x30,0x34,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x31,0x30,0x36,0x20,0x3a,0x20,0x76,0x65,0x63,
    0x34,0x66,0x20,0x3d,0x20,0x2a,0x28,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x43,0x6f,
    0x6c,0x6f,0x72,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x33,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x66,0x28,0x78,0x5f,0x31,0x30,0x36,0x2e,
    0x78,0x2c,0x20,0x78,0x5f,0x31,0x30,0x36,0x2e,0x79,0x2c,0x20,0x78,0x5f,0x31,0x30,
    0x36,0x2e,0x7a,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,
    0x31,0x31,0x30,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x20,0x3d,0x20,0x78,0x5f,
    0x32,0x39,0x2e,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x43,0x6f,0x6c,0x6f,0x72,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x20,0x3d,0x20,
    0x76,0x65,0x63,0x33,0x66,0x28,0x78,0x5f,0x31,0x31,0x30,0x2e,0x78,0x2c,0x20,0x78,
    0x5f,0x31,0x31,0x30,0x2e,0x79,0x2c,0x20,0x78,0x5f,0x31,0x31,0x30,0x2e,0x7a,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,0x20,0x3d,0x20,
    0x28,0x78,0x5f,0x39,0x36,0x20,0x2a,0x20,0x31,0x30,0x30,0x30,0x2e,0x30,0x66,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x31,0x31,0x33,0x20,
    0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x20,0x3d,0x20,0x70,0x68,0x6f,0x6e,0x67,0x42,
    0x52,0x44,0x46,0x5f,0x76,0x66,0x33,0x5f,0x76,0x66,0x33,0x5f,0x76,0x66,0x33,0x5f,
    0x76,0x66,0x33,0x5f,0x76,0x66,0x33,0x5f,0x66,0x31,0x5f,0x28,0x26,0x28,0x70,0x61,
    0x72,0x61,0x6d,0x29,0x2c,0x20,0x26,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x29,
    0x2c,0x20,0x26,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x29,0x2c,0x20,0x26,0x28,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x29,0x2c,0x20,0x26,0x28,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x34,0x29,0x2c,0x20,0x26,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,0x29,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x62,0x72,0x64,0x66,0x20,0x3d,0x20,0x78,0x5f,
    0x31,0x31,0x33,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x31,
    0x31,0x34,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x20,0x3d,0x20,0x62,0x72,0x64,
    0x66,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x31,0x31,0x35,
    0x20,0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,0x20,0x69,0x6c,0x6c,0x75,0x6d,0x69,0x6e,
    0x61,0x6e,0x63,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,
    0x31,0x32,0x30,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x20,0x3d,0x20,0x6c,0x75,
    0x6d,0x69,0x6e,0x61,0x6e,0x63,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6c,0x75,0x6d,
    0x69,0x6e,0x61,0x6e,0x63,0x65,0x20,0x3d,0x20,0x28,0x78,0x5f,0x31,0x32,0x30,0x20,
    0x2b,0x20,0x28,0x28,0x78,0x5f,0x31,0x31,0x34,0x20,0x2a,0x20,0x78,0x5f,0x31,0x31,
    0x35,0x29,0x20,0x2a,0x20,0x76,0x65,0x63,0x33,0x66,0x28,0x31,0x2e,0x30,0x66,0x2c,
    0x20,0x31,0x2e,0x30,0x66,0x2c,0x20,0x31,0x2e,0x30,0x66,0x29,0x29,0x29,0x3b,0x0a,
    0x20,0x20,0x7d,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x31,0x32,0x33,0x20,
    0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x20,0x3d,0x20,0x6c,0x75,0x6d,0x69,0x6e,0x61,
    0x6e,0x63,0x65,0x3b,0x0a,0x20,0x20,0x6f,0x75,0x74,0x43,0x6f,0x6c,0x6f,0x72,0x20,
    0x3d,0x20,0x76,0x65,0x63,0x34,0x66,0x28,0x78,0x5f,0x31,0x32,0x33,0x2e,0x78,0x2c,
    0x20,0x78,0x5f,0x31,0x32,0x33,0x2e,0x79,0x2c,0x20,0x78,0x5f,0x31,0x32,0x33,0x2e,
    0x7a,0x2c,0x20,0x31,0x2e,0x30,0x66,0x29,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,
    0x78,0x5f,0x31,0x32,0x38,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x20,0x3d,0x20,
    0x6f,0x75,0x74,0x43,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x72,0x65,0x74,0x75,
    0x72,0x6e,0x20,0x78,0x5f,0x31,0x32,0x38,0x3b,0x0a,0x7d,0x0a,0x0a,0x66,0x6e,0x20,
    0x6d,0x61,0x69,0x6e,0x5f,0x31,0x28,0x29,0x20,0x7b,0x0a,0x20,0x20,0x76,0x61,0x72,
    0x20,0x74,0x78,0x74,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x3b,0x0a,0x20,0x20,
    0x76,0x61,0x72,0x20,0x64,0x69,0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,0x61,0x6c,0x20,
    0x3a,0x20,0x66,0x33,0x32,0x3b,0x0a,0x20,0x20,0x76,0x61,0x72,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x36,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x3b,0x0a,0x20,0x20,
    0x6c,0x65,0x74,0x20,0x78,0x5f,0x33,0x34,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,
    0x20,0x3d,0x20,0x78,0x5f,0x32,0x39,0x2e,0x75,0x5f,0x4c,0x69,0x67,0x68,0x74,0x50,
    0x6f,0x73,0x3b,0x0a,0x20,0x20,0x6c,0x69,0x67,0x68,0x74,0x44,0x69,0x72,0x65,0x63,
    0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x2d,0x28,0x76,0x65,0x63,0x33,0x66,0x28,0x78,
    0x5f,0x33,0x34,0x2e,0x78,0x2c,0x20,0x78,0x5f,0x33,0x34,0x2e,0x79,0x2c,0x20,0x78,
    0x5f,0x33,0x34,0x2e,0x7a,0x29,0x29,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,
    0x5f,0x31,0x34,0x35,0x20,0x3a,0x20,0x76,0x65,0x63,0x32,0x66,0x20,0x3d,0x20,0x75,
    0x76,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x31,0x34,0x36,0x20,0x3a,
    0x20,0x76,0x65,0x63,0x34,0x66,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,
    0x53,0x61,0x6d,0x70,0x6c,0x65,0x28,0x74,0x65,0x78,0x2c,0x20,0x73,0x6d,0x70,0x2c,
    0x20,0x78,0x5f,0x31,0x34,0x35,0x29,0x3b,0x0a,0x20,0x20,0x74,0x78,0x74,0x20,0x3d,
    0x20,0x78,0x5f,0x31,0x34,0x36,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,
    0x31,0x34,0x39,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x20,0x3d,0x20,0x76,0x5f,
    0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x31,0x3b,0x0a,0x20,0x20,0x64,0x69,0x72,0x65,0x63,
    0x74,0x69,0x6f,0x6e,0x61,0x6c,0x20,0x3d,0x20,0x64,0x6f,0x74,0x28,0x6e,0x6f,0x72,
    0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x78,0x5f,0x31,0x34,0x39,0x29,0x2c,0x20,0x76,
    0x65,0x63,0x33,0x66,0x28,0x30,0x2e,0x30,0x66,0x2c,0x20,0x30,0x2e,0x34,0x34,0x37,
    0x32,0x31,0x33,0x35,0x39,0x30,0x31,0x34,0x35,0x31,0x31,0x31,0x30,0x38,0x33,0x39,
    0x38,0x66,0x2c,0x20,0x30,0x2e,0x38,0x39,0x34,0x34,0x32,0x37,0x31,0x38,0x30,0x32,
    0x39,0x30,0x32,0x32,0x32,0x31,0x36,0x37,0x39,0x37,0x66,0x29,0x29,0x3b,0x0a,0x20,
    0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x31,0x35,0x35,0x20,0x3a,0x20,0x66,0x33,0x32,
    0x20,0x3d,0x20,0x64,0x69,0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,0x61,0x6c,0x3b,0x0a,
    0x20,0x20,0x64,0x69,0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,0x61,0x6c,0x20,0x3d,0x20,
    0x28,0x78,0x5f,0x31,0x35,0x35,0x20,0x2a,0x20,0x30,0x2e,0x31,0x35,0x30,0x30,0x30,
    0x30,0x30,0x30,0x35,0x39,0x36,0x30,0x34,0x36,0x34,0x34,0x37,0x37,0x35,0x34,0x66,
    0x29,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x31,0x36,0x30,0x20,0x3a,
    0x20,0x66,0x33,0x32,0x20,0x3d,0x20,0x64,0x69,0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,
    0x61,0x6c,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x31,0x36,0x31,0x20,
    0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x20,0x3d,0x20,0x74,0x78,0x74,0x3b,0x0a,0x20,
    0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x31,0x36,0x36,0x20,0x3a,0x20,0x76,0x65,0x63,
    0x34,0x66,0x20,0x3d,0x20,0x78,0x5f,0x32,0x39,0x2e,0x64,0x69,0x66,0x66,0x75,0x73,
    0x65,0x43,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x36,0x20,0x3d,0x20,0x78,0x5f,0x31,0x36,0x36,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,
    0x20,0x78,0x5f,0x31,0x36,0x37,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x20,0x3d,
    0x20,0x67,0x65,0x74,0x50,0x68,0x6f,0x6e,0x67,0x5f,0x76,0x66,0x34,0x5f,0x28,0x26,
    0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x36,0x29,0x29,0x3b,0x0a,0x20,0x20,0x6c,0x65,
    0x74,0x20,0x78,0x5f,0x31,0x37,0x34,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x20,
    0x3d,0x20,0x63,0x6c,0x61,0x6d,0x70,0x28,0x28,0x76,0x65,0x63,0x33,0x66,0x28,0x78,
    0x5f,0x31,0x36,0x30,0x2c,0x20,0x78,0x5f,0x31,0x36,0x30,0x2c,0x20,0x78,0x5f,0x31,
    0x36,0x30,0x29,0x20,0x2b,0x20,0x28,0x76,0x65,0x63,0x33,0x66,0x28,0x78,0x5f,0x31,
    0x36,0x31,0x2e,0x78,0x2c,0x20,0x78,0x5f,0x31,0x36,0x31,0x2e,0x79,0x2c,0x20,0x78,
    0x5f,0x31,0x36,0x31,0x2e,0x7a,0x29,0x20,0x2a,0x20,0x76,0x65,0x63,0x33,0x66,0x28,
    0x78,0x5f,0x31,0x36,0x37,0x2e,0x78,0x2c,0x20,0x78,0x5f,0x31,0x36,0x37,0x2e,0x79,
    0x2c,0x20,0x78,0x5f,0x31,0x36,0x37,0x2e,0x7a,0x29,0x29,0x29,0x2c,0x20,0x76,0x65,
    0x63,0x33,0x66,0x28,0x30,0x2e,0x30,0x66,0x2c,0x20,0x30,0x2e,0x30,0x66,0x2c,0x20,
    0x30,0x2e,0x30,0x66,0x29,0x2c,0x20,0x76,0x65,0x63,0x33,0x66,0x28,0x31,0x2e,0x30,
    0x66,0x2c,0x20,0x31,0x2e,0x30,0x66,0x2c,0x20,0x31,0x2e,0x30,0x66,0x29,0x29,0x3b,
    0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x31,0x37,0x36,0x20,0x3a,0x20,0x66,
    0x33,0x32,0x20,0x3d,0x20,0x74,0x78,0x74,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x6c,0x65,
    0x74,0x20,0x78,0x5f,0x31,0x37,0x38,0x20,0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,0x20,
    0x78,0x5f,0x32,0x39,0x2e,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x43,0x6f,0x6c,0x6f,
    0x72,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,
    0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x66,0x28,0x78,0x5f,0x31,0x37,0x34,0x2e,
    0x78,0x2c,0x20,0x78,0x5f,0x31,0x37,0x34,0x2e,0x79,0x2c,0x20,0x78,0x5f,0x31,0x37,
    0x34,0x2e,0x7a,0x2c,0x20,0x28,0x78,0x5f,0x31,0x37,0x36,0x20,0x2a,0x20,0x78,0x5f,
    0x31,0x37,0x38,0x29,0x29,0x3b,0x0a,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x3b,
    0x0a,0x7d,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x5f,
    0x6f,0x75,0x74,0x20,0x7b,0x0a,0x20,0x20,0x40,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,
    0x6e,0x28,0x30,0x29,0x0a,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,
    0x72,0x5f,0x31,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x2c,0x0a,0x7d,0x0a,0x0a,
    0x40,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x0a,0x66,0x6e,0x20,0x6d,0x61,0x69,
    0x6e,0x28,0x40,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x28,0x30,0x29,0x20,0x76,
    0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x5f,0x70,0x61,0x72,0x61,0x6d,0x20,
    0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x2c,0x20,0x40,0x6c,0x6f,0x63,0x61,0x74,0x69,
    0x6f,0x6e,0x28,0x31,0x29,0x20,0x76,0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x2c,0x20,0x40,0x6c,
    0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x28,0x33,0x29,0x20,0x75,0x76,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x20,0x3a,0x20,0x76,0x65,0x63,0x32,0x66,0x2c,0x20,0x40,0x6c,0x6f,
    0x63,0x61,0x74,0x69,0x6f,0x6e,0x28,0x32,0x29,0x20,0x76,0x5f,0x4e,0x6f,0x72,0x6d,
    0x61,0x6c,0x31,0x5f,0x70,0x61,0x72,0x61,0x6d,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,
    0x66,0x29,0x20,0x2d,0x3e,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x6f,0x75,0x74,0x20,0x7b,
    0x0a,0x20,0x20,0x76,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x76,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x3b,0x0a,0x20,0x20,0x76,0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x76,
    0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x5f,0x70,0x61,0x72,0x61,0x6d,0x3b,0x0a,0x20,
    0x20,0x75,0x76,0x20,0x3d,0x20,0x75,0x76,0x5f,0x70,0x61,0x72,0x61,0x6d,0x3b,0x0a,
    0x20,0x20,0x76,0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x31,0x20,0x3d,0x20,0x76,0x5f,
    0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x31,0x5f,0x70,0x61,0x72,0x61,0x6d,0x3b,0x0a,0x20,
    0x20,0x6d,0x61,0x69,0x6e,0x5f,0x31,0x28,0x29,0x3b,0x0a,0x20,0x20,0x72,0x65,0x74,
    0x75,0x72,0x6e,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x6f,0x75,0x74,0x28,0x66,0x72,0x61,
    0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
static inline const sg_shader_desc* gouraud_shader_desc(sg_backend backend) {
    if (backend == SG_BACKEND_GLCORE) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.attrs[0].name = "a_Position";
            desc.attrs[1].name = "a_Normal";
            desc.attrs[2].name = "a_Texcoord0";
            desc.vs.source = (const char*)vs_source_glsl410;
            desc.vs.entry = "main";
            desc.vs.uniform_blocks[0].size = 192;
            desc.vs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.vs.uniform_blocks[0].uniforms[0].name = "vs_params";
            desc.vs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
            desc.vs.uniform_blocks[0].uniforms[0].array_count = 12;
            desc.fs.source = (const char*)fs_source_glsl410;
            desc.fs.entry = "main";
            desc.fs.uniform_blocks[0].size = 64;
            desc.fs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.fs.uniform_blocks[0].uniforms[0].name = "fs_params";
            desc.fs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
            desc.fs.uniform_blocks[0].uniforms[0].array_count = 4;
            desc.fs.images[0].used = true;
            desc.fs.images[0].multisampled = false;
            desc.fs.images[0].image_type = SG_IMAGETYPE_2D;
            desc.fs.images[0].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.fs.samplers[0].used = true;
            desc.fs.samplers[0].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.fs.image_sampler_pairs[0].used = true;
            desc.fs.image_sampler_pairs[0].image_slot = 0;
            desc.fs.image_sampler_pairs[0].sampler_slot = 0;
            desc.fs.image_sampler_pairs[0].glsl_name = "tex_smp";
            desc.label = "gouraud_shader";
        }
        return &desc;
    }
    if (backend == SG_BACKEND_GLES3) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.attrs[0].name = "a_Position";
            desc.attrs[1].name = "a_Normal";
            desc.attrs[2].name = "a_Texcoord0";
            desc.vs.source = (const char*)vs_source_glsl300es;
            desc.vs.entry = "main";
            desc.vs.uniform_blocks[0].size = 192;
            desc.vs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.vs.uniform_blocks[0].uniforms[0].name = "vs_params";
            desc.vs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
            desc.vs.uniform_blocks[0].uniforms[0].array_count = 12;
            desc.fs.source = (const char*)fs_source_glsl300es;
            desc.fs.entry = "main";
            desc.fs.uniform_blocks[0].size = 64;
            desc.fs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.fs.uniform_blocks[0].uniforms[0].name = "fs_params";
            desc.fs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
            desc.fs.uniform_blocks[0].uniforms[0].array_count = 4;
            desc.fs.images[0].used = true;
            desc.fs.images[0].multisampled = false;
            desc.fs.images[0].image_type = SG_IMAGETYPE_2D;
            desc.fs.images[0].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.fs.samplers[0].used = true;
            desc.fs.samplers[0].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.fs.image_sampler_pairs[0].used = true;
            desc.fs.image_sampler_pairs[0].image_slot = 0;
            desc.fs.image_sampler_pairs[0].sampler_slot = 0;
            desc.fs.image_sampler_pairs[0].glsl_name = "tex_smp";
            desc.label = "gouraud_shader";
        }
        return &desc;
    }
    if (backend == SG_BACKEND_D3D11) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.attrs[0].sem_name = "TEXCOORD";
            desc.attrs[0].sem_index = 0;
            desc.attrs[1].sem_name = "TEXCOORD";
            desc.attrs[1].sem_index = 1;
            desc.attrs[2].sem_name = "TEXCOORD";
            desc.attrs[2].sem_index = 2;
            desc.vs.source = (const char*)vs_source_hlsl5;
            desc.vs.d3d11_target = "vs_5_0";
            desc.vs.entry = "main";
            desc.vs.uniform_blocks[0].size = 192;
            desc.vs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.fs.source = (const char*)fs_source_hlsl5;
            desc.fs.d3d11_target = "ps_5_0";
            desc.fs.entry = "main";
            desc.fs.uniform_blocks[0].size = 64;
            desc.fs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.fs.images[0].used = true;
            desc.fs.images[0].multisampled = false;
            desc.fs.images[0].image_type = SG_IMAGETYPE_2D;
            desc.fs.images[0].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.fs.samplers[0].used = true;
            desc.fs.samplers[0].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.fs.image_sampler_pairs[0].used = true;
            desc.fs.image_sampler_pairs[0].image_slot = 0;
            desc.fs.image_sampler_pairs[0].sampler_slot = 0;
            desc.label = "gouraud_shader";
        }
        return &desc;
    }
    if (backend == SG_BACKEND_METAL_MACOS) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.vs.source = (const char*)vs_source_metal_macos;
            desc.vs.entry = "main0";
            desc.vs.uniform_blocks[0].size = 192;
            desc.vs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.fs.source = (const char*)fs_source_metal_macos;
            desc.fs.entry = "main0";
            desc.fs.uniform_blocks[0].size = 64;
            desc.fs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.fs.images[0].used = true;
            desc.fs.images[0].multisampled = false;
            desc.fs.images[0].image_type = SG_IMAGETYPE_2D;
            desc.fs.images[0].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.fs.samplers[0].used = true;
            desc.fs.samplers[0].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.fs.image_sampler_pairs[0].used = true;
            desc.fs.image_sampler_pairs[0].image_slot = 0;
            desc.fs.image_sampler_pairs[0].sampler_slot = 0;
            desc.label = "gouraud_shader";
        }
        return &desc;
    }
    if (backend == SG_BACKEND_METAL_IOS) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.vs.source = (const char*)vs_source_metal_ios;
            desc.vs.entry = "main0";
            desc.vs.uniform_blocks[0].size = 192;
            desc.vs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.fs.source = (const char*)fs_source_metal_ios;
            desc.fs.entry = "main0";
            desc.fs.uniform_blocks[0].size = 64;
            desc.fs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.fs.images[0].used = true;
            desc.fs.images[0].multisampled = false;
            desc.fs.images[0].image_type = SG_IMAGETYPE_2D;
            desc.fs.images[0].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.fs.samplers[0].used = true;
            desc.fs.samplers[0].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.fs.image_sampler_pairs[0].used = true;
            desc.fs.image_sampler_pairs[0].image_slot = 0;
            desc.fs.image_sampler_pairs[0].sampler_slot = 0;
            desc.label = "gouraud_shader";
        }
        return &desc;
    }
    if (backend == SG_BACKEND_METAL_SIMULATOR) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.vs.source = (const char*)vs_source_metal_sim;
            desc.vs.entry = "main0";
            desc.vs.uniform_blocks[0].size = 192;
            desc.vs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.fs.source = (const char*)fs_source_metal_sim;
            desc.fs.entry = "main0";
            desc.fs.uniform_blocks[0].size = 64;
            desc.fs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.fs.images[0].used = true;
            desc.fs.images[0].multisampled = false;
            desc.fs.images[0].image_type = SG_IMAGETYPE_2D;
            desc.fs.images[0].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.fs.samplers[0].used = true;
            desc.fs.samplers[0].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.fs.image_sampler_pairs[0].used = true;
            desc.fs.image_sampler_pairs[0].image_slot = 0;
            desc.fs.image_sampler_pairs[0].sampler_slot = 0;
            desc.label = "gouraud_shader";
        }
        return &desc;
    }
    if (backend == SG_BACKEND_WGPU) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.vs.source = (const char*)vs_source_wgsl;
            desc.vs.entry = "main";
            desc.vs.uniform_blocks[0].size = 192;
            desc.vs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.fs.source = (const char*)fs_source_wgsl;
            desc.fs.entry = "main";
            desc.fs.uniform_blocks[0].size = 64;
            desc.fs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.fs.images[0].used = true;
            desc.fs.images[0].multisampled = false;
            desc.fs.images[0].image_type = SG_IMAGETYPE_2D;
            desc.fs.images[0].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.fs.samplers[0].used = true;
            desc.fs.samplers[0].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.fs.image_sampler_pairs[0].used = true;
            desc.fs.image_sampler_pairs[0].image_slot = 0;
            desc.fs.image_sampler_pairs[0].sampler_slot = 0;
            desc.label = "gouraud_shader";
        }
        return &desc;
    }
    return 0;
}
